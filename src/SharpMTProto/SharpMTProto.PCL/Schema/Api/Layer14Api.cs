// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the SharpTL compiler (https://github.com/Taggersoft/SharpTL).
//     Generated at 07/06/2014 20:01:26
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#pragma warning disable 1591
namespace SharpMTProto.Schema.Api
{
    using SharpTL;
	using SharpTL.BaseTypes;
    using System.Threading.Tasks;
    
    // TL constructors.

    [TLObject(0xC4B9F9BB)]
    public partial class Error : IError
    {
        [TLProperty(1)]
        public System.UInt32 Code { get; set; }

        [TLProperty(2)]
        public System.String Text { get; set; }

    }

    [TLObject(0x7F3B18EA)]
    public partial class InputPeerEmpty : IInputPeer
    {
    }

    [TLObject(0x7DA07EC9)]
    public partial class InputPeerSelf : IInputPeer
    {
    }

    [TLObject(0x1023DBE8)]
    public partial class InputPeerContact : IInputPeer
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

    }

    [TLObject(0x9B447325)]
    public partial class InputPeerForeign : IInputPeer
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

    }

    [TLObject(0x179BE863)]
    public partial class InputPeerChat : IInputPeer
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

    }

    [TLObject(0xB98886CF)]
    public partial class InputUserEmpty : IInputUser
    {
    }

    [TLObject(0xF7C1B13F)]
    public partial class InputUserSelf : IInputUser
    {
    }

    [TLObject(0x86E94F65)]
    public partial class InputUserContact : IInputUser
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

    }

    [TLObject(0x655E74FF)]
    public partial class InputUserForeign : IInputUser
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

    }

    [TLObject(0xF392B7F4)]
    public partial class InputPhoneContact : IInputContact
    {
        [TLProperty(1)]
        public System.UInt64 ClientId { get; set; }

        [TLProperty(2)]
        public System.String Phone { get; set; }

        [TLProperty(3)]
        public System.String FirstName { get; set; }

        [TLProperty(4)]
        public System.String LastName { get; set; }

    }

    [TLObject(0xF52FF27F)]
    public partial class InputFile : IInputFile
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

        [TLProperty(2)]
        public System.UInt32 Parts { get; set; }

        [TLProperty(3)]
        public System.String Name { get; set; }

        [TLProperty(4)]
        public System.String Md5Checksum { get; set; }

    }

    [TLObject(0x9664F57F)]
    public partial class InputMediaEmpty : IInputMedia
    {
    }

    [TLObject(0x2DC53A7D)]
    public partial class InputMediaUploadedPhoto : IInputMedia
    {
        [TLProperty(1)]
        public IInputFile File { get; set; }

    }

    [TLObject(0x8F2AB2EC)]
    public partial class InputMediaPhoto : IInputMedia
    {
        [TLProperty(1)]
        public IInputPhoto Id { get; set; }

    }

    [TLObject(0xF9C44144)]
    public partial class InputMediaGeoPoint : IInputMedia
    {
        [TLProperty(1)]
        public IInputGeoPoint GeoPoint { get; set; }

    }

    [TLObject(0xA6E45987)]
    public partial class InputMediaContact : IInputMedia
    {
        [TLProperty(1)]
        public System.String PhoneNumber { get; set; }

        [TLProperty(2)]
        public System.String FirstName { get; set; }

        [TLProperty(3)]
        public System.String LastName { get; set; }

    }

    [TLObject(0x133AD6F6)]
    public partial class InputMediaUploadedVideo : IInputMedia
    {
        [TLProperty(1)]
        public IInputFile File { get; set; }

        [TLProperty(2)]
        public System.UInt32 Duration { get; set; }

        [TLProperty(3)]
        public System.UInt32 W { get; set; }

        [TLProperty(4)]
        public System.UInt32 H { get; set; }

        [TLProperty(5)]
        public System.String MimeType { get; set; }

    }

    [TLObject(0x9912DABF)]
    public partial class InputMediaUploadedThumbVideo : IInputMedia
    {
        [TLProperty(1)]
        public IInputFile File { get; set; }

        [TLProperty(2)]
        public IInputFile Thumb { get; set; }

        [TLProperty(3)]
        public System.UInt32 Duration { get; set; }

        [TLProperty(4)]
        public System.UInt32 W { get; set; }

        [TLProperty(5)]
        public System.UInt32 H { get; set; }

        [TLProperty(6)]
        public System.String MimeType { get; set; }

    }

    [TLObject(0x7F023AE6)]
    public partial class InputMediaVideo : IInputMedia
    {
        [TLProperty(1)]
        public IInputVideo Id { get; set; }

    }

    [TLObject(0x1CA48F57)]
    public partial class InputChatPhotoEmpty : IInputChatPhoto
    {
    }

    [TLObject(0x94254732)]
    public partial class InputChatUploadedPhoto : IInputChatPhoto
    {
        [TLProperty(1)]
        public IInputFile File { get; set; }

        [TLProperty(2)]
        public IInputPhotoCrop Crop { get; set; }

    }

    [TLObject(0xB2E1BF08)]
    public partial class InputChatPhoto : IInputChatPhoto
    {
        [TLProperty(1)]
        public IInputPhoto Id { get; set; }

        [TLProperty(2)]
        public IInputPhotoCrop Crop { get; set; }

    }

    [TLObject(0xE4C123D6)]
    public partial class InputGeoPointEmpty : IInputGeoPoint
    {
    }

    [TLObject(0xF3B7ACC9)]
    public partial class InputGeoPoint : IInputGeoPoint
    {
        [TLProperty(1)]
        public System.Double Lat { get; set; }

        [TLProperty(2)]
        public System.Double Long { get; set; }

    }

    [TLObject(0x1CD7BF0D)]
    public partial class InputPhotoEmpty : IInputPhoto
    {
    }

    [TLObject(0xFB95C6C4)]
    public partial class InputPhoto : IInputPhoto
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

    }

    [TLObject(0x5508EC75)]
    public partial class InputVideoEmpty : IInputVideo
    {
    }

    [TLObject(0xEE579652)]
    public partial class InputVideo : IInputVideo
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

    }

    [TLObject(0x14637196)]
    public partial class InputFileLocation : IInputFileLocation
    {
        [TLProperty(1)]
        public System.UInt64 VolumeId { get; set; }

        [TLProperty(2)]
        public System.UInt32 LocalId { get; set; }

        [TLProperty(3)]
        public System.UInt64 Secret { get; set; }

    }

    [TLObject(0x3D0364EC)]
    public partial class InputVideoFileLocation : IInputFileLocation
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

    }

    [TLObject(0xADE6B004)]
    public partial class InputPhotoCropAuto : IInputPhotoCrop
    {
    }

    [TLObject(0xD9915325)]
    public partial class InputPhotoCrop : IInputPhotoCrop
    {
        [TLProperty(1)]
        public System.Double CropLeft { get; set; }

        [TLProperty(2)]
        public System.Double CropTop { get; set; }

        [TLProperty(3)]
        public System.Double CropWidth { get; set; }

    }

    [TLObject(0x770656A8)]
    public partial class InputAppEvent : IInputAppEvent
    {
        [TLProperty(1)]
        public System.Double Time { get; set; }

        [TLProperty(2)]
        public System.String Type { get; set; }

        [TLProperty(3)]
        public System.UInt64 Peer { get; set; }

        [TLProperty(4)]
        public System.String Data { get; set; }

    }

    [TLObject(0x9DB1BC6D)]
    public partial class PeerUser : IPeer
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

    }

    [TLObject(0xBAD0E5BB)]
    public partial class PeerChat : IPeer
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

    }

    [TLObject(0xAA963B05)]
    public partial class StorageFileUnknown : IStorageFileType
    {
    }

    [TLObject(0x007EFE0E)]
    public partial class StorageFileJpeg : IStorageFileType
    {
    }

    [TLObject(0xCAE1AADF)]
    public partial class StorageFileGif : IStorageFileType
    {
    }

    [TLObject(0x0A4F63C0)]
    public partial class StorageFilePng : IStorageFileType
    {
    }

    [TLObject(0xAE1E508D)]
    public partial class StorageFilePdf : IStorageFileType
    {
    }

    [TLObject(0x528A0677)]
    public partial class StorageFileMp3 : IStorageFileType
    {
    }

    [TLObject(0x4B09EBBC)]
    public partial class StorageFileMov : IStorageFileType
    {
    }

    [TLObject(0x40BC6F52)]
    public partial class StorageFilePartial : IStorageFileType
    {
    }

    [TLObject(0xB3CEA0E4)]
    public partial class StorageFileMp4 : IStorageFileType
    {
    }

    [TLObject(0x1081464C)]
    public partial class StorageFileWebp : IStorageFileType
    {
    }

    [TLObject(0x7C596B46)]
    public partial class FileLocationUnavailable : IFileLocation
    {
        [TLProperty(1)]
        public System.UInt64 VolumeId { get; set; }

        [TLProperty(2)]
        public System.UInt32 LocalId { get; set; }

        [TLProperty(3)]
        public System.UInt64 Secret { get; set; }

    }

    [TLObject(0x53D69076)]
    public partial class FileLocation : IFileLocation
    {
        [TLProperty(1)]
        public System.UInt32 DcId { get; set; }

        [TLProperty(2)]
        public System.UInt64 VolumeId { get; set; }

        [TLProperty(3)]
        public System.UInt32 LocalId { get; set; }

        [TLProperty(4)]
        public System.UInt64 Secret { get; set; }

    }

    [TLObject(0x200250BA)]
    public partial class UserEmpty : IUser
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

    }

    [TLObject(0x720535EC)]
    public partial class UserSelf : IUser
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.String FirstName { get; set; }

        [TLProperty(3)]
        public System.String LastName { get; set; }

        [TLProperty(4)]
        public System.String Phone { get; set; }

        [TLProperty(5)]
        public IUserProfilePhoto Photo { get; set; }

        [TLProperty(6)]
        public IUserStatus Status { get; set; }

        [TLProperty(7)]
        public System.Boolean Inactive { get; set; }

    }

    [TLObject(0xF2FB8319)]
    public partial class UserContact : IUser
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.String FirstName { get; set; }

        [TLProperty(3)]
        public System.String LastName { get; set; }

        [TLProperty(4)]
        public System.UInt64 AccessHash { get; set; }

        [TLProperty(5)]
        public System.String Phone { get; set; }

        [TLProperty(6)]
        public IUserProfilePhoto Photo { get; set; }

        [TLProperty(7)]
        public IUserStatus Status { get; set; }

    }

    [TLObject(0x22E8CEB0)]
    public partial class UserRequest : IUser
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.String FirstName { get; set; }

        [TLProperty(3)]
        public System.String LastName { get; set; }

        [TLProperty(4)]
        public System.UInt64 AccessHash { get; set; }

        [TLProperty(5)]
        public System.String Phone { get; set; }

        [TLProperty(6)]
        public IUserProfilePhoto Photo { get; set; }

        [TLProperty(7)]
        public IUserStatus Status { get; set; }

    }

    [TLObject(0x5214C89D)]
    public partial class UserForeign : IUser
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.String FirstName { get; set; }

        [TLProperty(3)]
        public System.String LastName { get; set; }

        [TLProperty(4)]
        public System.UInt64 AccessHash { get; set; }

        [TLProperty(5)]
        public IUserProfilePhoto Photo { get; set; }

        [TLProperty(6)]
        public IUserStatus Status { get; set; }

    }

    [TLObject(0xB29AD7CC)]
    public partial class UserDeleted : IUser
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.String FirstName { get; set; }

        [TLProperty(3)]
        public System.String LastName { get; set; }

    }

    [TLObject(0x4F11BAE1)]
    public partial class UserProfilePhotoEmpty : IUserProfilePhoto
    {
    }

    [TLObject(0xD559D8C8)]
    public partial class UserProfilePhoto : IUserProfilePhoto
    {
        [TLProperty(1)]
        public System.UInt64 PhotoId { get; set; }

        [TLProperty(2)]
        public IFileLocation PhotoSmall { get; set; }

        [TLProperty(3)]
        public IFileLocation PhotoBig { get; set; }

    }

    [TLObject(0x09D05049)]
    public partial class UserStatusEmpty : IUserStatus
    {
    }

    [TLObject(0xEDB93949)]
    public partial class UserStatusOnline : IUserStatus
    {
        [TLProperty(1)]
        public System.UInt32 Expires { get; set; }

    }

    [TLObject(0x008C703F)]
    public partial class UserStatusOffline : IUserStatus
    {
        [TLProperty(1)]
        public System.UInt32 WasOnline { get; set; }

    }

    [TLObject(0x9BA2D800)]
    public partial class ChatEmpty : IChat
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

    }

    [TLObject(0x6E9C9BC7)]
    public partial class Chat : IChat
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.String Title { get; set; }

        [TLProperty(3)]
        public IChatPhoto Photo { get; set; }

        [TLProperty(4)]
        public System.UInt32 ParticipantsCount { get; set; }

        [TLProperty(5)]
        public System.UInt32 Date { get; set; }

        [TLProperty(6)]
        public System.Boolean Left { get; set; }

        [TLProperty(7)]
        public System.UInt32 Version { get; set; }

    }

    [TLObject(0xFB0CCC41)]
    public partial class ChatForbidden : IChat
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.String Title { get; set; }

        [TLProperty(3)]
        public System.UInt32 Date { get; set; }

    }

    [TLObject(0x630E61BE)]
    public partial class ChatFull : IChatFull
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public IChatParticipants Participants { get; set; }

        [TLProperty(3)]
        public IPhoto ChatPhoto { get; set; }

        [TLProperty(4)]
        public IPeerNotifySettings NotifySettings { get; set; }

    }

    [TLObject(0xC8D7493E)]
    public partial class ChatParticipant : IChatParticipant
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(2)]
        public System.UInt32 InviterId { get; set; }

        [TLProperty(3)]
        public System.UInt32 Date { get; set; }

    }

    [TLObject(0x0FD2BB8A)]
    public partial class ChatParticipantsForbidden : IChatParticipants
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

    }

    [TLObject(0x7841B415)]
    public partial class ChatParticipants : IChatParticipants
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

        [TLProperty(2)]
        public System.UInt32 AdminId { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IChatParticipant> Participants { get; set; }

        [TLProperty(4)]
        public System.UInt32 Version { get; set; }

    }

    [TLObject(0x37C1011C)]
    public partial class ChatPhotoEmpty : IChatPhoto
    {
    }

    [TLObject(0x6153276A)]
    public partial class ChatPhoto : IChatPhoto
    {
        [TLProperty(1)]
        public IFileLocation PhotoSmall { get; set; }

        [TLProperty(2)]
        public IFileLocation PhotoBig { get; set; }

    }

    [TLObject(0x83E5DE54)]
    public partial class MessageEmpty : IMessage
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

    }

    [TLObject(0x22EB6ABA)]
    public partial class Message : IMessage
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.UInt32 FromId { get; set; }

        [TLProperty(3)]
        public IPeer ToId { get; set; }

        [TLProperty(4)]
        public System.Boolean Out { get; set; }

        [TLProperty(5)]
        public System.Boolean Unread { get; set; }

        [TLProperty(6)]
        public System.UInt32 Date { get; set; }

        [TLProperty(7)]
        public System.String Message_ { get; set; }

        [TLProperty(8)]
        public IMessageMedia Media { get; set; }

    }

    [TLObject(0x05F46804)]
    public partial class MessageForwarded : IMessage
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.UInt32 FwdFromId { get; set; }

        [TLProperty(3)]
        public System.UInt32 FwdDate { get; set; }

        [TLProperty(4)]
        public System.UInt32 FromId { get; set; }

        [TLProperty(5)]
        public IPeer ToId { get; set; }

        [TLProperty(6)]
        public System.Boolean Out { get; set; }

        [TLProperty(7)]
        public System.Boolean Unread { get; set; }

        [TLProperty(8)]
        public System.UInt32 Date { get; set; }

        [TLProperty(9)]
        public System.String Message_ { get; set; }

        [TLProperty(10)]
        public IMessageMedia Media { get; set; }

    }

    [TLObject(0x9F8D60BB)]
    public partial class MessageService : IMessage
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.UInt32 FromId { get; set; }

        [TLProperty(3)]
        public IPeer ToId { get; set; }

        [TLProperty(4)]
        public System.Boolean Out { get; set; }

        [TLProperty(5)]
        public System.Boolean Unread { get; set; }

        [TLProperty(6)]
        public System.UInt32 Date { get; set; }

        [TLProperty(7)]
        public IMessageAction Action { get; set; }

    }

    [TLObject(0x3DED6320)]
    public partial class MessageMediaEmpty : IMessageMedia
    {
    }

    [TLObject(0xC8C45A2A)]
    public partial class MessageMediaPhoto : IMessageMedia
    {
        [TLProperty(1)]
        public IPhoto Photo { get; set; }

    }

    [TLObject(0xA2D24290)]
    public partial class MessageMediaVideo : IMessageMedia
    {
        [TLProperty(1)]
        public IVideo Video { get; set; }

    }

    [TLObject(0x56E0D474)]
    public partial class MessageMediaGeo : IMessageMedia
    {
        [TLProperty(1)]
        public IGeoPoint Geo { get; set; }

    }

    [TLObject(0x5E7D2F39)]
    public partial class MessageMediaContact : IMessageMedia
    {
        [TLProperty(1)]
        public System.String PhoneNumber { get; set; }

        [TLProperty(2)]
        public System.String FirstName { get; set; }

        [TLProperty(3)]
        public System.String LastName { get; set; }

        [TLProperty(4)]
        public System.UInt32 UserId { get; set; }

    }

    [TLObject(0x29632A36)]
    public partial class MessageMediaUnsupported : IMessageMedia
    {
        [TLProperty(1)]
        public System.Byte[] Bytes { get; set; }

    }

    [TLObject(0xB6AEF7B0)]
    public partial class MessageActionEmpty : IMessageAction
    {
    }

    [TLObject(0xA6638B9A)]
    public partial class MessageActionChatCreate : IMessageAction
    {
        [TLProperty(1)]
        public System.String Title { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<System.UInt32> Users { get; set; }

    }

    [TLObject(0xB5A1CE5A)]
    public partial class MessageActionChatEditTitle : IMessageAction
    {
        [TLProperty(1)]
        public System.String Title { get; set; }

    }

    [TLObject(0x7FCB13A8)]
    public partial class MessageActionChatEditPhoto : IMessageAction
    {
        [TLProperty(1)]
        public IPhoto Photo { get; set; }

    }

    [TLObject(0x95E3FBEF)]
    public partial class MessageActionChatDeletePhoto : IMessageAction
    {
    }

    [TLObject(0x5E3CFC4B)]
    public partial class MessageActionChatAddUser : IMessageAction
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

    }

    [TLObject(0xB2AE9B0C)]
    public partial class MessageActionChatDeleteUser : IMessageAction
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

    }

    [TLObject(0xAB3A99AC)]
    public partial class Dialog : IDialog
    {
        [TLProperty(1)]
        public IPeer Peer { get; set; }

        [TLProperty(2)]
        public System.UInt32 TopMessage { get; set; }

        [TLProperty(3)]
        public System.UInt32 UnreadCount { get; set; }

        [TLProperty(4)]
        public IPeerNotifySettings NotifySettings { get; set; }

    }

    [TLObject(0x2331B22D)]
    public partial class PhotoEmpty : IPhoto
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

    }

    [TLObject(0x22B56751)]
    public partial class Photo : IPhoto
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

        [TLProperty(3)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(4)]
        public System.UInt32 Date { get; set; }

        [TLProperty(5)]
        public System.String Caption { get; set; }

        [TLProperty(6)]
        public IGeoPoint Geo { get; set; }

        [TLProperty(7)]
        public System.Collections.Generic.List<IPhotoSize> Sizes { get; set; }

    }

    [TLObject(0x0E17E23C)]
    public partial class PhotoSizeEmpty : IPhotoSize
    {
        [TLProperty(1)]
        public System.String Type { get; set; }

    }

    [TLObject(0x77BFB61B)]
    public partial class PhotoSize : IPhotoSize
    {
        [TLProperty(1)]
        public System.String Type { get; set; }

        [TLProperty(2)]
        public IFileLocation Location { get; set; }

        [TLProperty(3)]
        public System.UInt32 W { get; set; }

        [TLProperty(4)]
        public System.UInt32 H { get; set; }

        [TLProperty(5)]
        public System.UInt32 Size { get; set; }

    }

    [TLObject(0xE9A734FA)]
    public partial class PhotoCachedSize : IPhotoSize
    {
        [TLProperty(1)]
        public System.String Type { get; set; }

        [TLProperty(2)]
        public IFileLocation Location { get; set; }

        [TLProperty(3)]
        public System.UInt32 W { get; set; }

        [TLProperty(4)]
        public System.UInt32 H { get; set; }

        [TLProperty(5)]
        public System.Byte[] Bytes { get; set; }

    }

    [TLObject(0xC10658A8)]
    public partial class VideoEmpty : IVideo
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

    }

    [TLObject(0x388FA391)]
    public partial class Video : IVideo
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

        [TLProperty(3)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(4)]
        public System.UInt32 Date { get; set; }

        [TLProperty(5)]
        public System.String Caption { get; set; }

        [TLProperty(6)]
        public System.UInt32 Duration { get; set; }

        [TLProperty(7)]
        public System.String MimeType { get; set; }

        [TLProperty(8)]
        public System.UInt32 Size { get; set; }

        [TLProperty(9)]
        public IPhotoSize Thumb { get; set; }

        [TLProperty(10)]
        public System.UInt32 DcId { get; set; }

        [TLProperty(11)]
        public System.UInt32 W { get; set; }

        [TLProperty(12)]
        public System.UInt32 H { get; set; }

    }

    [TLObject(0x1117DD5F)]
    public partial class GeoPointEmpty : IGeoPoint
    {
    }

    [TLObject(0x2049D70C)]
    public partial class GeoPoint : IGeoPoint
    {
        [TLProperty(1)]
        public System.Double Long { get; set; }

        [TLProperty(2)]
        public System.Double Lat { get; set; }

    }

    [TLObject(0xE300CC3B)]
    public partial class AuthCheckedPhone : IAuthCheckedPhone
    {
        [TLProperty(1)]
        public System.Boolean PhoneRegistered { get; set; }

        [TLProperty(2)]
        public System.Boolean PhoneInvited { get; set; }

    }

    [TLObject(0xEFED51D9)]
    public partial class AuthSentCode : IAuthSentCode
    {
        [TLProperty(1)]
        public System.Boolean PhoneRegistered { get; set; }

        [TLProperty(2)]
        public System.String PhoneCodeHash { get; set; }

        [TLProperty(3)]
        public System.UInt32 SendCallTimeout { get; set; }

        [TLProperty(4)]
        public System.Boolean IsPassword { get; set; }

    }

    [TLObject(0xF6B673A4)]
    public partial class AuthAuthorization : IAuthAuthorization
    {
        [TLProperty(1)]
        public System.UInt32 Expires { get; set; }

        [TLProperty(2)]
        public IUser User { get; set; }

    }

    [TLObject(0xDF969C2D)]
    public partial class AuthExportedAuthorization : IAuthExportedAuthorization
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.Byte[] Bytes { get; set; }

    }

    [TLObject(0xB8BC5B0C)]
    public partial class InputNotifyPeer : IInputNotifyPeer
    {
        [TLProperty(1)]
        public IInputPeer Peer { get; set; }

    }

    [TLObject(0x193B4417)]
    public partial class InputNotifyUsers : IInputNotifyPeer
    {
    }

    [TLObject(0x4A95E84E)]
    public partial class InputNotifyChats : IInputNotifyPeer
    {
    }

    [TLObject(0xA429B886)]
    public partial class InputNotifyAll : IInputNotifyPeer
    {
    }

    [TLObject(0xF03064D8)]
    public partial class InputPeerNotifyEventsEmpty : IInputPeerNotifyEvents
    {
    }

    [TLObject(0xE86A2C74)]
    public partial class InputPeerNotifyEventsAll : IInputPeerNotifyEvents
    {
    }

    [TLObject(0x46A2CE98)]
    public partial class InputPeerNotifySettings : IInputPeerNotifySettings
    {
        [TLProperty(1)]
        public System.UInt32 MuteUntil { get; set; }

        [TLProperty(2)]
        public System.String Sound { get; set; }

        [TLProperty(3)]
        public System.Boolean ShowPreviews { get; set; }

        [TLProperty(4)]
        public System.UInt32 EventsMask { get; set; }

    }

    [TLObject(0xADD53CB3)]
    public partial class PeerNotifyEventsEmpty : IPeerNotifyEvents
    {
    }

    [TLObject(0x6D1DED88)]
    public partial class PeerNotifyEventsAll : IPeerNotifyEvents
    {
    }

    [TLObject(0x70A68512)]
    public partial class PeerNotifySettingsEmpty : IPeerNotifySettings
    {
    }

    [TLObject(0x8D5E11EE)]
    public partial class PeerNotifySettings : IPeerNotifySettings
    {
        [TLProperty(1)]
        public System.UInt32 MuteUntil { get; set; }

        [TLProperty(2)]
        public System.String Sound { get; set; }

        [TLProperty(3)]
        public System.Boolean ShowPreviews { get; set; }

        [TLProperty(4)]
        public System.UInt32 EventsMask { get; set; }

    }

    [TLObject(0xCCB03657)]
    public partial class WallPaper : IWallPaper
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.String Title { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IPhotoSize> Sizes { get; set; }

        [TLProperty(4)]
        public System.UInt32 Color { get; set; }

    }

    [TLObject(0x771095DA)]
    public partial class UserFull : IUserFull
    {
        [TLProperty(1)]
        public IUser User { get; set; }

        [TLProperty(2)]
        public IContactsLink Link { get; set; }

        [TLProperty(3)]
        public IPhoto ProfilePhoto { get; set; }

        [TLProperty(4)]
        public IPeerNotifySettings NotifySettings { get; set; }

        [TLProperty(5)]
        public System.Boolean Blocked { get; set; }

        [TLProperty(6)]
        public System.String RealFirstName { get; set; }

        [TLProperty(7)]
        public System.String RealLastName { get; set; }

    }

    [TLObject(0xF911C994)]
    public partial class Contact : IContact
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(2)]
        public System.Boolean Mutual { get; set; }

    }

    [TLObject(0xD0028438)]
    public partial class ImportedContact : IImportedContact
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(2)]
        public System.UInt64 ClientId { get; set; }

    }

    [TLObject(0x561BC879)]
    public partial class ContactBlocked : IContactBlocked
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(2)]
        public System.UInt32 Date { get; set; }

    }

    [TLObject(0xEA879F95)]
    public partial class ContactFound : IContactFound
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

    }

    [TLObject(0x3DE191A1)]
    public partial class ContactSuggested : IContactSuggested
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(2)]
        public System.UInt32 MutualContacts { get; set; }

    }

    [TLObject(0xAA77B873)]
    public partial class ContactStatus : IContactStatus
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(2)]
        public System.UInt32 Expires { get; set; }

    }

    [TLObject(0x3631CF4C)]
    public partial class ChatLocated : IChatLocated
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

        [TLProperty(2)]
        public System.UInt32 Distance { get; set; }

    }

    [TLObject(0x133421F8)]
    public partial class ContactsForeignLinkUnknown : IContactsForeignLink
    {
    }

    [TLObject(0xA7801F47)]
    public partial class ContactsForeignLinkRequested : IContactsForeignLink
    {
        [TLProperty(1)]
        public System.Boolean HasPhone { get; set; }

    }

    [TLObject(0x1BEA8CE1)]
    public partial class ContactsForeignLinkMutual : IContactsForeignLink
    {
    }

    [TLObject(0xD22A1C60)]
    public partial class ContactsMyLinkEmpty : IContactsMyLink
    {
    }

    [TLObject(0x6C69EFEE)]
    public partial class ContactsMyLinkRequested : IContactsMyLink
    {
        [TLProperty(1)]
        public System.Boolean Contact { get; set; }

    }

    [TLObject(0xC240EBD9)]
    public partial class ContactsMyLinkContact : IContactsMyLink
    {
    }

    [TLObject(0xECCEA3F5)]
    public partial class ContactsLink : IContactsLink
    {
        [TLProperty(1)]
        public IContactsMyLink MyLink { get; set; }

        [TLProperty(2)]
        public IContactsForeignLink ForeignLink { get; set; }

        [TLProperty(3)]
        public IUser User { get; set; }

    }

    [TLObject(0x6F8B8CB2)]
    public partial class ContactsContacts : IContactsContacts
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IContact> Contacts { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0xB74BA9D2)]
    public partial class ContactsContactsNotModified : IContactsContacts
    {
    }

    [TLObject(0xAD524315)]
    public partial class ContactsImportedContacts : IContactsImportedContacts
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IImportedContact> Imported { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<System.UInt64> RetryContacts { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0x1C138D15)]
    public partial class ContactsBlocked : IContactsBlocked
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IContactBlocked> Blocked { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0x900802A1)]
    public partial class ContactsBlockedSlice : IContactsBlocked
    {
        [TLProperty(1)]
        public System.UInt32 Count { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IContactBlocked> Blocked { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0x0566000E)]
    public partial class ContactsFound : IContactsFound
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IContactFound> Results { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0x5649DCC5)]
    public partial class ContactsSuggested : IContactsSuggested
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IContactSuggested> Results { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0x15BA6C40)]
    public partial class MessagesDialogs : IMessagesDialogs
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IDialog> Dialogs { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IMessage> Messages { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(4)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0x71E094F3)]
    public partial class MessagesDialogsSlice : IMessagesDialogs
    {
        [TLProperty(1)]
        public System.UInt32 Count { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IDialog> Dialogs { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IMessage> Messages { get; set; }

        [TLProperty(4)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(5)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0x8C718E87)]
    public partial class MessagesMessages : IMessagesMessages
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IMessage> Messages { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0x0B446AE3)]
    public partial class MessagesMessagesSlice : IMessagesMessages
    {
        [TLProperty(1)]
        public System.UInt32 Count { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IMessage> Messages { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(4)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0x3F4E0648)]
    public partial class MessagesMessageEmpty : IMessagesMessage
    {
    }

    [TLObject(0xFF90C417)]
    public partial class MessagesMessage : IMessagesMessage
    {
        [TLProperty(1)]
        public IMessage Message { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0x969478BB)]
    public partial class MessagesStatedMessages : IMessagesStatedMessages
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IMessage> Messages { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

        [TLProperty(4)]
        public System.UInt32 Pts { get; set; }

        [TLProperty(5)]
        public System.UInt32 Seq { get; set; }

    }

    [TLObject(0xD07AE726)]
    public partial class MessagesStatedMessage : IMessagesStatedMessage
    {
        [TLProperty(1)]
        public IMessage Message { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

        [TLProperty(4)]
        public System.UInt32 Pts { get; set; }

        [TLProperty(5)]
        public System.UInt32 Seq { get; set; }

    }

    [TLObject(0xD1F4D35C)]
    public partial class MessagesSentMessage : IMessagesSentMessage
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.UInt32 Date { get; set; }

        [TLProperty(3)]
        public System.UInt32 Pts { get; set; }

        [TLProperty(4)]
        public System.UInt32 Seq { get; set; }

    }

    [TLObject(0x40E9002A)]
    public partial class MessagesChat : IMessagesChat
    {
        [TLProperty(1)]
        public IChat Chat { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0x8150CBD8)]
    public partial class MessagesChats : IMessagesChats
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0xE5D7D19C)]
    public partial class MessagesChatFull : IMessagesChatFull
    {
        [TLProperty(1)]
        public IChatFull FullChat { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0xB7DE36F2)]
    public partial class MessagesAffectedHistory : IMessagesAffectedHistory
    {
        [TLProperty(1)]
        public System.UInt32 Pts { get; set; }

        [TLProperty(2)]
        public System.UInt32 Seq { get; set; }

        [TLProperty(3)]
        public System.UInt32 Offset { get; set; }

    }

    [TLObject(0x57E2F66C)]
    public partial class InputMessagesFilterEmpty : IMessagesFilter
    {
    }

    [TLObject(0x9609A51C)]
    public partial class InputMessagesFilterPhotos : IMessagesFilter
    {
    }

    [TLObject(0x9FC00E65)]
    public partial class InputMessagesFilterVideo : IMessagesFilter
    {
    }

    [TLObject(0x56E9F0E4)]
    public partial class InputMessagesFilterPhotoVideo : IMessagesFilter
    {
    }

    [TLObject(0x9EDDF188)]
    public partial class InputMessagesFilterDocument : IMessagesFilter
    {
    }

    [TLObject(0xCFC87522)]
    public partial class InputMessagesFilterAudio : IMessagesFilter
    {
    }

    [TLObject(0x013ABDB3)]
    public partial class UpdateNewMessage : IUpdate
    {
        [TLProperty(1)]
        public IMessage Message { get; set; }

        [TLProperty(2)]
        public System.UInt32 Pts { get; set; }

    }

    [TLObject(0x4E90BFD6)]
    public partial class UpdateMessageID : IUpdate
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 RandomId { get; set; }

    }

    [TLObject(0xC6649E31)]
    public partial class UpdateReadMessages : IUpdate
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<System.UInt32> Messages { get; set; }

        [TLProperty(2)]
        public System.UInt32 Pts { get; set; }

    }

    [TLObject(0xA92BFE26)]
    public partial class UpdateDeleteMessages : IUpdate
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<System.UInt32> Messages { get; set; }

        [TLProperty(2)]
        public System.UInt32 Pts { get; set; }

    }

    [TLObject(0xD15DE04D)]
    public partial class UpdateRestoreMessages : IUpdate
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<System.UInt32> Messages { get; set; }

        [TLProperty(2)]
        public System.UInt32 Pts { get; set; }

    }

    [TLObject(0x6BAA8508)]
    public partial class UpdateUserTyping : IUpdate
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

    }

    [TLObject(0x3C46CFE6)]
    public partial class UpdateChatUserTyping : IUpdate
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

        [TLProperty(2)]
        public System.UInt32 UserId { get; set; }

    }

    [TLObject(0x07761198)]
    public partial class UpdateChatParticipants : IUpdate
    {
        [TLProperty(1)]
        public IChatParticipants Participants { get; set; }

    }

    [TLObject(0x1BFBD823)]
    public partial class UpdateUserStatus : IUpdate
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(2)]
        public IUserStatus Status { get; set; }

    }

    [TLObject(0xDA22D9AD)]
    public partial class UpdateUserName : IUpdate
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(2)]
        public System.String FirstName { get; set; }

        [TLProperty(3)]
        public System.String LastName { get; set; }

    }

    [TLObject(0x95313B0C)]
    public partial class UpdateUserPhoto : IUpdate
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(2)]
        public System.UInt32 Date { get; set; }

        [TLProperty(3)]
        public IUserProfilePhoto Photo { get; set; }

        [TLProperty(4)]
        public System.Boolean Previous { get; set; }

    }

    [TLObject(0x2575BBB9)]
    public partial class UpdateContactRegistered : IUpdate
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(2)]
        public System.UInt32 Date { get; set; }

    }

    [TLObject(0x51A48A9A)]
    public partial class UpdateContactLink : IUpdate
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(2)]
        public IContactsMyLink MyLink { get; set; }

        [TLProperty(3)]
        public IContactsForeignLink ForeignLink { get; set; }

    }

    [TLObject(0x6F690963)]
    public partial class UpdateActivation : IUpdate
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

    }

    [TLObject(0x8F06529A)]
    public partial class UpdateNewAuthorization : IUpdate
    {
        [TLProperty(1)]
        public System.UInt64 AuthKeyId { get; set; }

        [TLProperty(2)]
        public System.UInt32 Date { get; set; }

        [TLProperty(3)]
        public System.String Device { get; set; }

        [TLProperty(4)]
        public System.String Location { get; set; }

    }

    [TLObject(0xA56C2A3E)]
    public partial class UpdatesState : IUpdatesState
    {
        [TLProperty(1)]
        public System.UInt32 Pts { get; set; }

        [TLProperty(2)]
        public System.UInt32 Qts { get; set; }

        [TLProperty(3)]
        public System.UInt32 Date { get; set; }

        [TLProperty(4)]
        public System.UInt32 Seq { get; set; }

        [TLProperty(5)]
        public System.UInt32 UnreadCount { get; set; }

    }

    [TLObject(0x5D75A138)]
    public partial class UpdatesDifferenceEmpty : IUpdatesDifference
    {
        [TLProperty(1)]
        public System.UInt32 Date { get; set; }

        [TLProperty(2)]
        public System.UInt32 Seq { get; set; }

    }

    [TLObject(0x00F49CA0)]
    public partial class UpdatesDifference : IUpdatesDifference
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IMessage> NewMessages { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IEncryptedMessage> NewEncryptedMessages { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IUpdate> OtherUpdates { get; set; }

        [TLProperty(4)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(5)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

        [TLProperty(6)]
        public IUpdatesState State { get; set; }

    }

    [TLObject(0xA8FB1981)]
    public partial class UpdatesDifferenceSlice : IUpdatesDifference
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IMessage> NewMessages { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IEncryptedMessage> NewEncryptedMessages { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IUpdate> OtherUpdates { get; set; }

        [TLProperty(4)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(5)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

        [TLProperty(6)]
        public IUpdatesState IntermediateState { get; set; }

    }

    [TLObject(0xE317AF7E)]
    public partial class UpdatesTooLong : IUpdates
    {
    }

    [TLObject(0xD3F45784)]
    public partial class UpdateShortMessage : IUpdates
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.UInt32 FromId { get; set; }

        [TLProperty(3)]
        public System.String Message { get; set; }

        [TLProperty(4)]
        public System.UInt32 Pts { get; set; }

        [TLProperty(5)]
        public System.UInt32 Date { get; set; }

        [TLProperty(6)]
        public System.UInt32 Seq { get; set; }

    }

    [TLObject(0x2B2FBD4E)]
    public partial class UpdateShortChatMessage : IUpdates
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.UInt32 FromId { get; set; }

        [TLProperty(3)]
        public System.UInt32 ChatId { get; set; }

        [TLProperty(4)]
        public System.String Message { get; set; }

        [TLProperty(5)]
        public System.UInt32 Pts { get; set; }

        [TLProperty(6)]
        public System.UInt32 Date { get; set; }

        [TLProperty(7)]
        public System.UInt32 Seq { get; set; }

    }

    [TLObject(0x78D4DEC1)]
    public partial class UpdateShort : IUpdates
    {
        [TLProperty(1)]
        public IUpdate Update { get; set; }

        [TLProperty(2)]
        public System.UInt32 Date { get; set; }

    }

    [TLObject(0x725B04C3)]
    public partial class UpdatesCombined : IUpdates
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IUpdate> Updates_ { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(4)]
        public System.UInt32 Date { get; set; }

        [TLProperty(5)]
        public System.UInt32 SeqStart { get; set; }

        [TLProperty(6)]
        public System.UInt32 Seq { get; set; }

    }

    [TLObject(0x74AE4240)]
    public partial class Updates : IUpdates
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IUpdate> Updates_ { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(4)]
        public System.UInt32 Date { get; set; }

        [TLProperty(5)]
        public System.UInt32 Seq { get; set; }

    }

    [TLObject(0x8DCA6AA5)]
    public partial class PhotosPhotos : IPhotosPhotos
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IPhoto> Photos { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0x15051F54)]
    public partial class PhotosPhotosSlice : IPhotosPhotos
    {
        [TLProperty(1)]
        public System.UInt32 Count { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IPhoto> Photos { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0x20212CA8)]
    public partial class PhotosPhoto : IPhotosPhoto
    {
        [TLProperty(1)]
        public IPhoto Photo { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0x096A18D5)]
    public partial class UploadFile : IUploadFile
    {
        [TLProperty(1)]
        public IStorageFileType Type { get; set; }

        [TLProperty(2)]
        public System.UInt32 Mtime { get; set; }

        [TLProperty(3)]
        public System.Byte[] Bytes { get; set; }

    }

    [TLObject(0x2EC2A43C)]
    public partial class DcOption : IDcOption
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.String Hostname { get; set; }

        [TLProperty(3)]
        public System.String IpAddress { get; set; }

        [TLProperty(4)]
        public System.UInt32 Port { get; set; }

    }

    [TLObject(0x2E54DD74)]
    public partial class Config : IConfig
    {
        [TLProperty(1)]
        public System.UInt32 Date { get; set; }

        [TLProperty(2)]
        public System.Boolean TestMode { get; set; }

        [TLProperty(3)]
        public System.UInt32 ThisDc { get; set; }

        [TLProperty(4)]
        public System.Collections.Generic.List<IDcOption> DcOptions { get; set; }

        [TLProperty(5)]
        public System.UInt32 ChatSizeMax { get; set; }

        [TLProperty(6)]
        public System.UInt32 BroadcastSizeMax { get; set; }

    }

    [TLObject(0x8E1A1775)]
    public partial class NearestDc : INearestDc
    {
        [TLProperty(1)]
        public System.String Country { get; set; }

        [TLProperty(2)]
        public System.UInt32 ThisDc { get; set; }

        [TLProperty(3)]
        public System.UInt32 NearestDc_ { get; set; }

    }

    [TLObject(0x8987F311)]
    public partial class HelpAppUpdate : IHelpAppUpdate
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.Boolean Critical { get; set; }

        [TLProperty(3)]
        public System.String Url { get; set; }

        [TLProperty(4)]
        public System.String Text { get; set; }

    }

    [TLObject(0xC45A6536)]
    public partial class HelpNoAppUpdate : IHelpAppUpdate
    {
    }

    [TLObject(0x18CB9F78)]
    public partial class HelpInviteText : IHelpInviteText
    {
        [TLProperty(1)]
        public System.String Message { get; set; }

    }

    [TLObject(0x3E74F5C6)]
    public partial class MessagesStatedMessagesLinks : IMessagesStatedMessages
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IMessage> Messages { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

        [TLProperty(4)]
        public System.Collections.Generic.List<IContactsLink> Links { get; set; }

        [TLProperty(5)]
        public System.UInt32 Pts { get; set; }

        [TLProperty(6)]
        public System.UInt32 Seq { get; set; }

    }

    [TLObject(0xA9AF2881)]
    public partial class MessagesStatedMessageLink : IMessagesStatedMessage
    {
        [TLProperty(1)]
        public IMessage Message { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

        [TLProperty(4)]
        public System.Collections.Generic.List<IContactsLink> Links { get; set; }

        [TLProperty(5)]
        public System.UInt32 Pts { get; set; }

        [TLProperty(6)]
        public System.UInt32 Seq { get; set; }

    }

    [TLObject(0xE9DB4A3F)]
    public partial class MessagesSentMessageLink : IMessagesSentMessage
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.UInt32 Date { get; set; }

        [TLProperty(3)]
        public System.UInt32 Pts { get; set; }

        [TLProperty(4)]
        public System.UInt32 Seq { get; set; }

        [TLProperty(5)]
        public System.Collections.Generic.List<IContactsLink> Links { get; set; }

    }

    [TLObject(0x74D456FA)]
    public partial class InputGeoChat : IInputGeoChat
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

    }

    [TLObject(0x4D8DDEC8)]
    public partial class InputNotifyGeoChatPeer : IInputNotifyPeer
    {
        [TLProperty(1)]
        public IInputGeoChat Peer { get; set; }

    }

    [TLObject(0x75EAEA5A)]
    public partial class GeoChat : IChat
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

        [TLProperty(3)]
        public System.String Title { get; set; }

        [TLProperty(4)]
        public System.String Address { get; set; }

        [TLProperty(5)]
        public System.String Venue { get; set; }

        [TLProperty(6)]
        public IGeoPoint Geo { get; set; }

        [TLProperty(7)]
        public IChatPhoto Photo { get; set; }

        [TLProperty(8)]
        public System.UInt32 ParticipantsCount { get; set; }

        [TLProperty(9)]
        public System.UInt32 Date { get; set; }

        [TLProperty(10)]
        public System.Boolean CheckedIn { get; set; }

        [TLProperty(11)]
        public System.UInt32 Version { get; set; }

    }

    [TLObject(0x60311A9B)]
    public partial class GeoChatMessageEmpty : IGeoChatMessage
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

        [TLProperty(2)]
        public System.UInt32 Id { get; set; }

    }

    [TLObject(0x4505F8E1)]
    public partial class GeoChatMessage : IGeoChatMessage
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

        [TLProperty(2)]
        public System.UInt32 Id { get; set; }

        [TLProperty(3)]
        public System.UInt32 FromId { get; set; }

        [TLProperty(4)]
        public System.UInt32 Date { get; set; }

        [TLProperty(5)]
        public System.String Message { get; set; }

        [TLProperty(6)]
        public IMessageMedia Media { get; set; }

    }

    [TLObject(0xD34FA24E)]
    public partial class GeoChatMessageService : IGeoChatMessage
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

        [TLProperty(2)]
        public System.UInt32 Id { get; set; }

        [TLProperty(3)]
        public System.UInt32 FromId { get; set; }

        [TLProperty(4)]
        public System.UInt32 Date { get; set; }

        [TLProperty(5)]
        public IMessageAction Action { get; set; }

    }

    [TLObject(0x17B1578B)]
    public partial class GeochatsStatedMessage : IGeochatsStatedMessage
    {
        [TLProperty(1)]
        public IGeoChatMessage Message { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

        [TLProperty(4)]
        public System.UInt32 Seq { get; set; }

    }

    [TLObject(0x48FEB267)]
    public partial class GeochatsLocated : IGeochatsLocated
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IChatLocated> Results { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IGeoChatMessage> Messages { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(4)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0xD1526DB1)]
    public partial class GeochatsMessages : IGeochatsMessages
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IGeoChatMessage> Messages { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0xBC5863E8)]
    public partial class GeochatsMessagesSlice : IGeochatsMessages
    {
        [TLProperty(1)]
        public System.UInt32 Count { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<IGeoChatMessage> Messages { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<IChat> Chats { get; set; }

        [TLProperty(4)]
        public System.Collections.Generic.List<IUser> Users { get; set; }

    }

    [TLObject(0x6F038EBC)]
    public partial class MessageActionGeoChatCreate : IMessageAction
    {
        [TLProperty(1)]
        public System.String Title { get; set; }

        [TLProperty(2)]
        public System.String Address { get; set; }

    }

    [TLObject(0x0C7D53DE)]
    public partial class MessageActionGeoChatCheckin : IMessageAction
    {
    }

    [TLObject(0x5A68E3F7)]
    public partial class UpdateNewGeoChatMessage : IUpdate
    {
        [TLProperty(1)]
        public IGeoChatMessage Message { get; set; }

    }

    [TLObject(0x63117F24)]
    public partial class WallPaperSolid : IWallPaper
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.String Title { get; set; }

        [TLProperty(3)]
        public System.UInt32 BgColor { get; set; }

        [TLProperty(4)]
        public System.UInt32 Color { get; set; }

    }

    [TLObject(0x12BCBD9A)]
    public partial class UpdateNewEncryptedMessage : IUpdate
    {
        [TLProperty(1)]
        public IEncryptedMessage Message { get; set; }

        [TLProperty(2)]
        public System.UInt32 Qts { get; set; }

    }

    [TLObject(0x1710F156)]
    public partial class UpdateEncryptedChatTyping : IUpdate
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

    }

    [TLObject(0xB4A2E88D)]
    public partial class UpdateEncryption : IUpdate
    {
        [TLProperty(1)]
        public IEncryptedChat Chat { get; set; }

        [TLProperty(2)]
        public System.UInt32 Date { get; set; }

    }

    [TLObject(0x38FE25B7)]
    public partial class UpdateEncryptedMessagesRead : IUpdate
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

        [TLProperty(2)]
        public System.UInt32 MaxDate { get; set; }

        [TLProperty(3)]
        public System.UInt32 Date { get; set; }

    }

    [TLObject(0xAB7EC0A0)]
    public partial class EncryptedChatEmpty : IEncryptedChat
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

    }

    [TLObject(0x3BF703DC)]
    public partial class EncryptedChatWaiting : IEncryptedChat
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

        [TLProperty(3)]
        public System.UInt32 Date { get; set; }

        [TLProperty(4)]
        public System.UInt32 AdminId { get; set; }

        [TLProperty(5)]
        public System.UInt32 ParticipantId { get; set; }

    }

    [TLObject(0xC878527E)]
    public partial class EncryptedChatRequested : IEncryptedChat
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

        [TLProperty(3)]
        public System.UInt32 Date { get; set; }

        [TLProperty(4)]
        public System.UInt32 AdminId { get; set; }

        [TLProperty(5)]
        public System.UInt32 ParticipantId { get; set; }

        [TLProperty(6)]
        public System.Byte[] GA { get; set; }

    }

    [TLObject(0xFA56CE36)]
    public partial class EncryptedChat : IEncryptedChat
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

        [TLProperty(3)]
        public System.UInt32 Date { get; set; }

        [TLProperty(4)]
        public System.UInt32 AdminId { get; set; }

        [TLProperty(5)]
        public System.UInt32 ParticipantId { get; set; }

        [TLProperty(6)]
        public System.Byte[] GAOrB { get; set; }

        [TLProperty(7)]
        public System.UInt64 KeyFingerprint { get; set; }

    }

    [TLObject(0x13D6DD27)]
    public partial class EncryptedChatDiscarded : IEncryptedChat
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

    }

    [TLObject(0xF141B5E1)]
    public partial class InputEncryptedChat : IInputEncryptedChat
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

    }

    [TLObject(0xC21F497E)]
    public partial class EncryptedFileEmpty : IEncryptedFile
    {
    }

    [TLObject(0x4A70994C)]
    public partial class EncryptedFile : IEncryptedFile
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

        [TLProperty(3)]
        public System.UInt32 Size { get; set; }

        [TLProperty(4)]
        public System.UInt32 DcId { get; set; }

        [TLProperty(5)]
        public System.UInt32 KeyFingerprint { get; set; }

    }

    [TLObject(0x1837C364)]
    public partial class InputEncryptedFileEmpty : IInputEncryptedFile
    {
    }

    [TLObject(0x64BD0306)]
    public partial class InputEncryptedFileUploaded : IInputEncryptedFile
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

        [TLProperty(2)]
        public System.UInt32 Parts { get; set; }

        [TLProperty(3)]
        public System.String Md5Checksum { get; set; }

        [TLProperty(4)]
        public System.UInt32 KeyFingerprint { get; set; }

    }

    [TLObject(0x5A17B5E5)]
    public partial class InputEncryptedFile : IInputEncryptedFile
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

    }

    [TLObject(0xF5235D55)]
    public partial class InputEncryptedFileLocation : IInputFileLocation
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

    }

    [TLObject(0xED18C118)]
    public partial class EncryptedMessage : IEncryptedMessage
    {
        [TLProperty(1)]
        public System.UInt64 RandomId { get; set; }

        [TLProperty(2)]
        public System.UInt32 ChatId { get; set; }

        [TLProperty(3)]
        public System.UInt32 Date { get; set; }

        [TLProperty(4)]
        public System.Byte[] Bytes { get; set; }

        [TLProperty(5)]
        public IEncryptedFile File { get; set; }

    }

    [TLObject(0x23734B06)]
    public partial class EncryptedMessageService : IEncryptedMessage
    {
        [TLProperty(1)]
        public System.UInt64 RandomId { get; set; }

        [TLProperty(2)]
        public System.UInt32 ChatId { get; set; }

        [TLProperty(3)]
        public System.UInt32 Date { get; set; }

        [TLProperty(4)]
        public System.Byte[] Bytes { get; set; }

    }

    [TLObject(0x99A438CF)]
    public partial class DecryptedMessageLayer : IDecryptedMessageLayer
    {
        [TLProperty(1)]
        public System.UInt32 Layer { get; set; }

        [TLProperty(2)]
        public IDecryptedMessage Message { get; set; }

    }

    [TLObject(0x1F814F1F)]
    public partial class DecryptedMessage : IDecryptedMessage
    {
        [TLProperty(1)]
        public System.UInt64 RandomId { get; set; }

        [TLProperty(2)]
        public System.Byte[] RandomBytes { get; set; }

        [TLProperty(3)]
        public System.String Message { get; set; }

        [TLProperty(4)]
        public IDecryptedMessageMedia Media { get; set; }

    }

    [TLObject(0xAA48327D)]
    public partial class DecryptedMessageService : IDecryptedMessage
    {
        [TLProperty(1)]
        public System.UInt64 RandomId { get; set; }

        [TLProperty(2)]
        public System.Byte[] RandomBytes { get; set; }

        [TLProperty(3)]
        public IDecryptedMessageAction Action { get; set; }

    }

    [TLObject(0x089F5C4A)]
    public partial class DecryptedMessageMediaEmpty : IDecryptedMessageMedia
    {
    }

    [TLObject(0x32798A8C)]
    public partial class DecryptedMessageMediaPhoto : IDecryptedMessageMedia
    {
        [TLProperty(1)]
        public System.Byte[] Thumb { get; set; }

        [TLProperty(2)]
        public System.UInt32 ThumbW { get; set; }

        [TLProperty(3)]
        public System.UInt32 ThumbH { get; set; }

        [TLProperty(4)]
        public System.UInt32 W { get; set; }

        [TLProperty(5)]
        public System.UInt32 H { get; set; }

        [TLProperty(6)]
        public System.UInt32 Size { get; set; }

        [TLProperty(7)]
        public System.Byte[] Key { get; set; }

        [TLProperty(8)]
        public System.Byte[] Iv { get; set; }

    }

    [TLObject(0x524A415D)]
    public partial class DecryptedMessageMediaVideo : IDecryptedMessageMedia
    {
        [TLProperty(1)]
        public System.Byte[] Thumb { get; set; }

        [TLProperty(2)]
        public System.UInt32 ThumbW { get; set; }

        [TLProperty(3)]
        public System.UInt32 ThumbH { get; set; }

        [TLProperty(4)]
        public System.UInt32 Duration { get; set; }

        [TLProperty(5)]
        public System.String MimeType { get; set; }

        [TLProperty(6)]
        public System.UInt32 W { get; set; }

        [TLProperty(7)]
        public System.UInt32 H { get; set; }

        [TLProperty(8)]
        public System.UInt32 Size { get; set; }

        [TLProperty(9)]
        public System.Byte[] Key { get; set; }

        [TLProperty(10)]
        public System.Byte[] Iv { get; set; }

    }

    [TLObject(0x35480A59)]
    public partial class DecryptedMessageMediaGeoPoint : IDecryptedMessageMedia
    {
        [TLProperty(1)]
        public System.Double Lat { get; set; }

        [TLProperty(2)]
        public System.Double Long { get; set; }

    }

    [TLObject(0x588A0A97)]
    public partial class DecryptedMessageMediaContact : IDecryptedMessageMedia
    {
        [TLProperty(1)]
        public System.String PhoneNumber { get; set; }

        [TLProperty(2)]
        public System.String FirstName { get; set; }

        [TLProperty(3)]
        public System.String LastName { get; set; }

        [TLProperty(4)]
        public System.UInt32 UserId { get; set; }

    }

    [TLObject(0xA1733AEC)]
    public partial class DecryptedMessageActionSetMessageTTL : IDecryptedMessageAction
    {
        [TLProperty(1)]
        public System.UInt32 TtlSeconds { get; set; }

    }

    [TLObject(0xC0E24635)]
    public partial class MessagesDhConfigNotModified : IMessagesDhConfig
    {
        [TLProperty(1)]
        public System.Byte[] Random { get; set; }

    }

    [TLObject(0x2C221EDD)]
    public partial class MessagesDhConfig : IMessagesDhConfig
    {
        [TLProperty(1)]
        public System.UInt32 G { get; set; }

        [TLProperty(2)]
        public System.Byte[] P { get; set; }

        [TLProperty(3)]
        public System.UInt32 Version { get; set; }

        [TLProperty(4)]
        public System.Byte[] Random { get; set; }

    }

    [TLObject(0x560F8935)]
    public partial class MessagesSentEncryptedMessage : IMessagesSentEncryptedMessage
    {
        [TLProperty(1)]
        public System.UInt32 Date { get; set; }

    }

    [TLObject(0x9493FF32)]
    public partial class MessagesSentEncryptedFile : IMessagesSentEncryptedMessage
    {
        [TLProperty(1)]
        public System.UInt32 Date { get; set; }

        [TLProperty(2)]
        public IEncryptedFile File { get; set; }

    }

    [TLObject(0xFA4F0BB5)]
    public partial class InputFileBig : IInputFile
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

        [TLProperty(2)]
        public System.UInt32 Parts { get; set; }

        [TLProperty(3)]
        public System.String Name { get; set; }

    }

    [TLObject(0x2DC173C8)]
    public partial class InputEncryptedFileBigUploaded : IInputEncryptedFile
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

        [TLProperty(2)]
        public System.UInt32 Parts { get; set; }

        [TLProperty(3)]
        public System.UInt32 KeyFingerprint { get; set; }

    }

    [TLObject(0x3A0EEB22)]
    public partial class UpdateChatParticipantAdd : IUpdate
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

        [TLProperty(2)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(3)]
        public System.UInt32 InviterId { get; set; }

        [TLProperty(4)]
        public System.UInt32 Version { get; set; }

    }

    [TLObject(0x6E5F8C22)]
    public partial class UpdateChatParticipantDelete : IUpdate
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

        [TLProperty(2)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(3)]
        public System.UInt32 Version { get; set; }

    }

    [TLObject(0x8E5E9873)]
    public partial class UpdateDcOptions : IUpdate
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IDcOption> DcOptions { get; set; }

    }

    [TLObject(0x4E498CAB)]
    public partial class InputMediaUploadedAudio : IInputMedia
    {
        [TLProperty(1)]
        public IInputFile File { get; set; }

        [TLProperty(2)]
        public System.UInt32 Duration { get; set; }

        [TLProperty(3)]
        public System.String MimeType { get; set; }

    }

    [TLObject(0x89938781)]
    public partial class InputMediaAudio : IInputMedia
    {
        [TLProperty(1)]
        public IInputAudio Id { get; set; }

    }

    [TLObject(0x34E794BD)]
    public partial class InputMediaUploadedDocument : IInputMedia
    {
        [TLProperty(1)]
        public IInputFile File { get; set; }

        [TLProperty(2)]
        public System.String FileName { get; set; }

        [TLProperty(3)]
        public System.String MimeType { get; set; }

    }

    [TLObject(0x3E46DE5D)]
    public partial class InputMediaUploadedThumbDocument : IInputMedia
    {
        [TLProperty(1)]
        public IInputFile File { get; set; }

        [TLProperty(2)]
        public IInputFile Thumb { get; set; }

        [TLProperty(3)]
        public System.String FileName { get; set; }

        [TLProperty(4)]
        public System.String MimeType { get; set; }

    }

    [TLObject(0xD184E841)]
    public partial class InputMediaDocument : IInputMedia
    {
        [TLProperty(1)]
        public IInputDocument Id { get; set; }

    }

    [TLObject(0x2FDA2204)]
    public partial class MessageMediaDocument : IMessageMedia
    {
        [TLProperty(1)]
        public IDocument Document { get; set; }

    }

    [TLObject(0xC6B68300)]
    public partial class MessageMediaAudio : IMessageMedia
    {
        [TLProperty(1)]
        public IAudio Audio { get; set; }

    }

    [TLObject(0xD95ADC84)]
    public partial class InputAudioEmpty : IInputAudio
    {
    }

    [TLObject(0x77D440FF)]
    public partial class InputAudio : IInputAudio
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

    }

    [TLObject(0x72F0EAAE)]
    public partial class InputDocumentEmpty : IInputDocument
    {
    }

    [TLObject(0x18798952)]
    public partial class InputDocument : IInputDocument
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

    }

    [TLObject(0x74DC404D)]
    public partial class InputAudioFileLocation : IInputFileLocation
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

    }

    [TLObject(0x4E45ABE9)]
    public partial class InputDocumentFileLocation : IInputFileLocation
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

    }

    [TLObject(0xB095434B)]
    public partial class DecryptedMessageMediaDocument : IDecryptedMessageMedia
    {
        [TLProperty(1)]
        public System.Byte[] Thumb { get; set; }

        [TLProperty(2)]
        public System.UInt32 ThumbW { get; set; }

        [TLProperty(3)]
        public System.UInt32 ThumbH { get; set; }

        [TLProperty(4)]
        public System.String FileName { get; set; }

        [TLProperty(5)]
        public System.String MimeType { get; set; }

        [TLProperty(6)]
        public System.UInt32 Size { get; set; }

        [TLProperty(7)]
        public System.Byte[] Key { get; set; }

        [TLProperty(8)]
        public System.Byte[] Iv { get; set; }

    }

    [TLObject(0x57E0A9CB)]
    public partial class DecryptedMessageMediaAudio : IDecryptedMessageMedia
    {
        [TLProperty(1)]
        public System.UInt32 Duration { get; set; }

        [TLProperty(2)]
        public System.String MimeType { get; set; }

        [TLProperty(3)]
        public System.UInt32 Size { get; set; }

        [TLProperty(4)]
        public System.Byte[] Key { get; set; }

        [TLProperty(5)]
        public System.Byte[] Iv { get; set; }

    }

    [TLObject(0x586988D8)]
    public partial class AudioEmpty : IAudio
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

    }

    [TLObject(0xC7AC6496)]
    public partial class Audio : IAudio
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

        [TLProperty(3)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(4)]
        public System.UInt32 Date { get; set; }

        [TLProperty(5)]
        public System.UInt32 Duration { get; set; }

        [TLProperty(6)]
        public System.String MimeType { get; set; }

        [TLProperty(7)]
        public System.UInt32 Size { get; set; }

        [TLProperty(8)]
        public System.UInt32 DcId { get; set; }

    }

    [TLObject(0x36F8C871)]
    public partial class DocumentEmpty : IDocument
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

    }

    [TLObject(0x9EFC6326)]
    public partial class Document : IDocument
    {
        [TLProperty(1)]
        public System.UInt64 Id { get; set; }

        [TLProperty(2)]
        public System.UInt64 AccessHash { get; set; }

        [TLProperty(3)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(4)]
        public System.UInt32 Date { get; set; }

        [TLProperty(5)]
        public System.String FileName { get; set; }

        [TLProperty(6)]
        public System.String MimeType { get; set; }

        [TLProperty(7)]
        public System.UInt32 Size { get; set; }

        [TLProperty(8)]
        public IPhotoSize Thumb { get; set; }

        [TLProperty(9)]
        public System.UInt32 DcId { get; set; }

    }

    [TLObject(0x17C6B5F6)]
    public partial class HelpSupport : IHelpSupport
    {
        [TLProperty(1)]
        public System.String PhoneNumber { get; set; }

        [TLProperty(2)]
        public IUser User { get; set; }

    }

    [TLObject(0x0C4F40BE)]
    public partial class DecryptedMessageActionReadMessages : IDecryptedMessageAction
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<System.UInt64> RandomIds { get; set; }

    }

    [TLObject(0x65614304)]
    public partial class DecryptedMessageActionDeleteMessages : IDecryptedMessageAction
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<System.UInt64> RandomIds { get; set; }

    }

    [TLObject(0x8AC1F475)]
    public partial class DecryptedMessageActionScreenshotMessages : IDecryptedMessageAction
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<System.UInt64> RandomIds { get; set; }

    }

    [TLObject(0x6719E45C)]
    public partial class DecryptedMessageActionFlushHistory : IDecryptedMessageAction
    {
    }

    [TLObject(0xF3048883)]
    public partial class DecryptedMessageActionNotifyLayer : IDecryptedMessageAction
    {
        [TLProperty(1)]
        public System.UInt32 Layer { get; set; }

    }

    [TLObject(0x9FD40BD8)]
    public partial class NotifyPeer : INotifyPeer
    {
        [TLProperty(1)]
        public IPeer Peer { get; set; }

    }

    [TLObject(0xB4C83B4C)]
    public partial class NotifyUsers : INotifyPeer
    {
    }

    [TLObject(0xC007CEC3)]
    public partial class NotifyChats : INotifyPeer
    {
    }

    [TLObject(0x74D07C60)]
    public partial class NotifyAll : INotifyPeer
    {
    }

    [TLObject(0x80ECE81A)]
    public partial class UpdateUserBlocked : IUpdate
    {
        [TLProperty(1)]
        public System.UInt32 UserId { get; set; }

        [TLProperty(2)]
        public System.Boolean Blocked { get; set; }

    }

    [TLObject(0xBEC268EF)]
    public partial class UpdateNotifySettings : IUpdate
    {
        [TLProperty(1)]
        public INotifyPeer Peer { get; set; }

        [TLProperty(2)]
        public IPeerNotifySettings NotifySettings { get; set; }

    }

    [TLObject(0xCB9F372D)]
    public partial class InvokeAfterMsgArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt64 MsgId { get; set; }

        [TLProperty(2)]
        public SharpTL.BaseTypes.ITLObject Query { get; set; }

    }

    [TLObject(0x3DC4B4F0)]
    public partial class InvokeAfterMsgsArgs : ITLObject
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<System.UInt64> MsgIds { get; set; }

        [TLProperty(2)]
        public SharpTL.BaseTypes.ITLObject Query { get; set; }

    }

    [TLObject(0x6FE51DFB)]
    public partial class AuthCheckPhoneArgs : ITLObject
    {
        [TLProperty(1)]
        public System.String PhoneNumber { get; set; }

    }

    [TLObject(0x768D5F4D)]
    public partial class AuthSendCodeArgs : ITLObject
    {
        [TLProperty(1)]
        public System.String PhoneNumber { get; set; }

        [TLProperty(2)]
        public System.UInt32 SmsType { get; set; }

        [TLProperty(3)]
        public System.UInt32 ApiId { get; set; }

        [TLProperty(4)]
        public System.String ApiHash { get; set; }

        [TLProperty(5)]
        public System.String LangCode { get; set; }

    }

    [TLObject(0x03C51564)]
    public partial class AuthSendCallArgs : ITLObject
    {
        [TLProperty(1)]
        public System.String PhoneNumber { get; set; }

        [TLProperty(2)]
        public System.String PhoneCodeHash { get; set; }

    }

    [TLObject(0x1B067634)]
    public partial class AuthSignUpArgs : ITLObject
    {
        [TLProperty(1)]
        public System.String PhoneNumber { get; set; }

        [TLProperty(2)]
        public System.String PhoneCodeHash { get; set; }

        [TLProperty(3)]
        public System.String PhoneCode { get; set; }

        [TLProperty(4)]
        public System.String FirstName { get; set; }

        [TLProperty(5)]
        public System.String LastName { get; set; }

    }

    [TLObject(0xBCD51581)]
    public partial class AuthSignInArgs : ITLObject
    {
        [TLProperty(1)]
        public System.String PhoneNumber { get; set; }

        [TLProperty(2)]
        public System.String PhoneCodeHash { get; set; }

        [TLProperty(3)]
        public System.String PhoneCode { get; set; }

    }

    [TLObject(0x5717DA40)]
    public partial class AuthLogOutArgs : ITLObject
    {
    }

    [TLObject(0x9FAB0D1A)]
    public partial class AuthResetAuthorizationsArgs : ITLObject
    {
    }

    [TLObject(0x771C1D97)]
    public partial class AuthSendInvitesArgs : ITLObject
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<System.String> PhoneNumbers { get; set; }

        [TLProperty(2)]
        public System.String Message { get; set; }

    }

    [TLObject(0xE5BFFFCD)]
    public partial class AuthExportAuthorizationArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 DcId { get; set; }

    }

    [TLObject(0xE3EF9613)]
    public partial class AuthImportAuthorizationArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 Id { get; set; }

        [TLProperty(2)]
        public System.Byte[] Bytes { get; set; }

    }

    [TLObject(0x446C712C)]
    public partial class AccountRegisterDeviceArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 TokenType { get; set; }

        [TLProperty(2)]
        public System.String Token { get; set; }

        [TLProperty(3)]
        public System.String DeviceModel { get; set; }

        [TLProperty(4)]
        public System.String SystemVersion { get; set; }

        [TLProperty(5)]
        public System.String AppVersion { get; set; }

        [TLProperty(6)]
        public System.Boolean AppSandbox { get; set; }

        [TLProperty(7)]
        public System.String LangCode { get; set; }

    }

    [TLObject(0x65C55B40)]
    public partial class AccountUnregisterDeviceArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 TokenType { get; set; }

        [TLProperty(2)]
        public System.String Token { get; set; }

    }

    [TLObject(0x84BE5B93)]
    public partial class AccountUpdateNotifySettingsArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputNotifyPeer Peer { get; set; }

        [TLProperty(2)]
        public IInputPeerNotifySettings Settings { get; set; }

    }

    [TLObject(0x12B3AD31)]
    public partial class AccountGetNotifySettingsArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputNotifyPeer Peer { get; set; }

    }

    [TLObject(0xDB7E1747)]
    public partial class AccountResetNotifySettingsArgs : ITLObject
    {
    }

    [TLObject(0xF0888D68)]
    public partial class AccountUpdateProfileArgs : ITLObject
    {
        [TLProperty(1)]
        public System.String FirstName { get; set; }

        [TLProperty(2)]
        public System.String LastName { get; set; }

    }

    [TLObject(0x6628562C)]
    public partial class AccountUpdateStatusArgs : ITLObject
    {
        [TLProperty(1)]
        public System.Boolean Offline { get; set; }

    }

    [TLObject(0xC04CFAC2)]
    public partial class AccountGetWallPapersArgs : ITLObject
    {
    }

    [TLObject(0x0D91A548)]
    public partial class UsersGetUsersArgs : ITLObject
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IInputUser> Id { get; set; }

    }

    [TLObject(0xCA30A5B1)]
    public partial class UsersGetFullUserArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputUser Id { get; set; }

    }

    [TLObject(0xC4A353EE)]
    public partial class ContactsGetStatusesArgs : ITLObject
    {
    }

    [TLObject(0x22C6AA08)]
    public partial class ContactsGetContactsArgs : ITLObject
    {
        [TLProperty(1)]
        public System.String Hash { get; set; }

    }

    [TLObject(0xDA30B32D)]
    public partial class ContactsImportContactsArgs : ITLObject
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IInputContact> Contacts { get; set; }

        [TLProperty(2)]
        public System.Boolean Replace { get; set; }

    }

    [TLObject(0x11F812D8)]
    public partial class ContactsSearchArgs : ITLObject
    {
        [TLProperty(1)]
        public System.String Q { get; set; }

        [TLProperty(2)]
        public System.UInt32 Limit { get; set; }

    }

    [TLObject(0xCD773428)]
    public partial class ContactsGetSuggestedArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 Limit { get; set; }

    }

    [TLObject(0x8E953744)]
    public partial class ContactsDeleteContactArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputUser Id { get; set; }

    }

    [TLObject(0x59AB389E)]
    public partial class ContactsDeleteContactsArgs : ITLObject
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IInputUser> Id { get; set; }

    }

    [TLObject(0x332B49FC)]
    public partial class ContactsBlockArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputUser Id { get; set; }

    }

    [TLObject(0xE54100BD)]
    public partial class ContactsUnblockArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputUser Id { get; set; }

    }

    [TLObject(0xF57C350F)]
    public partial class ContactsGetBlockedArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 Offset { get; set; }

        [TLProperty(2)]
        public System.UInt32 Limit { get; set; }

    }

    [TLObject(0x4222FA74)]
    public partial class MessagesGetMessagesArgs : ITLObject
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<System.UInt32> Id { get; set; }

    }

    [TLObject(0xECCF1DF6)]
    public partial class MessagesGetDialogsArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 Offset { get; set; }

        [TLProperty(2)]
        public System.UInt32 MaxId { get; set; }

        [TLProperty(3)]
        public System.UInt32 Limit { get; set; }

    }

    [TLObject(0x92A1DF2F)]
    public partial class MessagesGetHistoryArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputPeer Peer { get; set; }

        [TLProperty(2)]
        public System.UInt32 Offset { get; set; }

        [TLProperty(3)]
        public System.UInt32 MaxId { get; set; }

        [TLProperty(4)]
        public System.UInt32 Limit { get; set; }

    }

    [TLObject(0x07E9F2AB)]
    public partial class MessagesSearchArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputPeer Peer { get; set; }

        [TLProperty(2)]
        public System.String Q { get; set; }

        [TLProperty(3)]
        public IMessagesFilter Filter { get; set; }

        [TLProperty(4)]
        public System.UInt32 MinDate { get; set; }

        [TLProperty(5)]
        public System.UInt32 MaxDate { get; set; }

        [TLProperty(6)]
        public System.UInt32 Offset { get; set; }

        [TLProperty(7)]
        public System.UInt32 MaxId { get; set; }

        [TLProperty(8)]
        public System.UInt32 Limit { get; set; }

    }

    [TLObject(0xB04F2510)]
    public partial class MessagesReadHistoryArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputPeer Peer { get; set; }

        [TLProperty(2)]
        public System.UInt32 MaxId { get; set; }

        [TLProperty(3)]
        public System.UInt32 Offset { get; set; }

    }

    [TLObject(0xF4F8FB61)]
    public partial class MessagesDeleteHistoryArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputPeer Peer { get; set; }

        [TLProperty(2)]
        public System.UInt32 Offset { get; set; }

    }

    [TLObject(0x14F2DD0A)]
    public partial class MessagesDeleteMessagesArgs : ITLObject
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<System.UInt32> Id { get; set; }

    }

    [TLObject(0x395F9D7E)]
    public partial class MessagesRestoreMessagesArgs : ITLObject
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<System.UInt32> Id { get; set; }

    }

    [TLObject(0x28ABCB68)]
    public partial class MessagesReceivedMessagesArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 MaxId { get; set; }

    }

    [TLObject(0x719839E9)]
    public partial class MessagesSetTypingArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputPeer Peer { get; set; }

        [TLProperty(2)]
        public System.Boolean Typing { get; set; }

    }

    [TLObject(0x4CDE0AAB)]
    public partial class MessagesSendMessageArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputPeer Peer { get; set; }

        [TLProperty(2)]
        public System.String Message { get; set; }

        [TLProperty(3)]
        public System.UInt64 RandomId { get; set; }

    }

    [TLObject(0xA3C85D76)]
    public partial class MessagesSendMediaArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputPeer Peer { get; set; }

        [TLProperty(2)]
        public IInputMedia Media { get; set; }

        [TLProperty(3)]
        public System.UInt64 RandomId { get; set; }

    }

    [TLObject(0x514CD10F)]
    public partial class MessagesForwardMessagesArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputPeer Peer { get; set; }

        [TLProperty(2)]
        public System.Collections.Generic.List<System.UInt32> Id { get; set; }

    }

    [TLObject(0x3C6AA187)]
    public partial class MessagesGetChatsArgs : ITLObject
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<System.UInt32> Id { get; set; }

    }

    [TLObject(0x3B831C66)]
    public partial class MessagesGetFullChatArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

    }

    [TLObject(0xB4BC68B5)]
    public partial class MessagesEditChatTitleArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

        [TLProperty(2)]
        public System.String Title { get; set; }

    }

    [TLObject(0xD881821D)]
    public partial class MessagesEditChatPhotoArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

        [TLProperty(2)]
        public IInputChatPhoto Photo { get; set; }

    }

    [TLObject(0x2EE9EE9E)]
    public partial class MessagesAddChatUserArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

        [TLProperty(2)]
        public IInputUser UserId { get; set; }

        [TLProperty(3)]
        public System.UInt32 FwdLimit { get; set; }

    }

    [TLObject(0xC3C5CD23)]
    public partial class MessagesDeleteChatUserArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

        [TLProperty(2)]
        public IInputUser UserId { get; set; }

    }

    [TLObject(0x419D9AEE)]
    public partial class MessagesCreateChatArgs : ITLObject
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IInputUser> Users { get; set; }

        [TLProperty(2)]
        public System.String Title { get; set; }

    }

    [TLObject(0xEDD4882A)]
    public partial class UpdatesGetStateArgs : ITLObject
    {
    }

    [TLObject(0x0A041495)]
    public partial class UpdatesGetDifferenceArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 Pts { get; set; }

        [TLProperty(2)]
        public System.UInt32 Date { get; set; }

        [TLProperty(3)]
        public System.UInt32 Qts { get; set; }

    }

    [TLObject(0xEEF579A0)]
    public partial class PhotosUpdateProfilePhotoArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputPhoto Id { get; set; }

        [TLProperty(2)]
        public IInputPhotoCrop Crop { get; set; }

    }

    [TLObject(0xD50F9C88)]
    public partial class PhotosUploadProfilePhotoArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputFile File { get; set; }

        [TLProperty(2)]
        public System.String Caption { get; set; }

        [TLProperty(3)]
        public IInputGeoPoint GeoPoint { get; set; }

        [TLProperty(4)]
        public IInputPhotoCrop Crop { get; set; }

    }

    [TLObject(0xB304A621)]
    public partial class UploadSaveFilePartArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt64 FileId { get; set; }

        [TLProperty(2)]
        public System.UInt32 FilePart { get; set; }

        [TLProperty(3)]
        public System.Byte[] Bytes { get; set; }

    }

    [TLObject(0xE3A6CFB5)]
    public partial class UploadGetFileArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputFileLocation Location { get; set; }

        [TLProperty(2)]
        public System.UInt32 Offset { get; set; }

        [TLProperty(3)]
        public System.UInt32 Limit { get; set; }

    }

    [TLObject(0xC4F9186B)]
    public partial class HelpGetConfigArgs : ITLObject
    {
    }

    [TLObject(0x1FB33026)]
    public partial class HelpGetNearestDcArgs : ITLObject
    {
    }

    [TLObject(0xC812AC7E)]
    public partial class HelpGetAppUpdateArgs : ITLObject
    {
        [TLProperty(1)]
        public System.String DeviceModel { get; set; }

        [TLProperty(2)]
        public System.String SystemVersion { get; set; }

        [TLProperty(3)]
        public System.String AppVersion { get; set; }

        [TLProperty(4)]
        public System.String LangCode { get; set; }

    }

    [TLObject(0x6F02F748)]
    public partial class HelpSaveAppLogArgs : ITLObject
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IInputAppEvent> Events { get; set; }

    }

    [TLObject(0xA4A95186)]
    public partial class HelpGetInviteTextArgs : ITLObject
    {
        [TLProperty(1)]
        public System.String LangCode { get; set; }

    }

    [TLObject(0xB7EE553C)]
    public partial class PhotosGetUserPhotosArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputUser UserId { get; set; }

        [TLProperty(2)]
        public System.UInt32 Offset { get; set; }

        [TLProperty(3)]
        public System.UInt32 MaxId { get; set; }

        [TLProperty(4)]
        public System.UInt32 Limit { get; set; }

    }

    [TLObject(0x03F3F4F2)]
    public partial class MessagesForwardMessageArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputPeer Peer { get; set; }

        [TLProperty(2)]
        public System.UInt32 Id { get; set; }

        [TLProperty(3)]
        public System.UInt64 RandomId { get; set; }

    }

    [TLObject(0x41BB0972)]
    public partial class MessagesSendBroadcastArgs : ITLObject
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<IInputUser> Contacts { get; set; }

        [TLProperty(2)]
        public System.String Message { get; set; }

        [TLProperty(3)]
        public IInputMedia Media { get; set; }

    }

    [TLObject(0x7F192D8F)]
    public partial class GeochatsGetLocatedArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputGeoPoint GeoPoint { get; set; }

        [TLProperty(2)]
        public System.UInt32 Radius { get; set; }

        [TLProperty(3)]
        public System.UInt32 Limit { get; set; }

    }

    [TLObject(0xE1427E6F)]
    public partial class GeochatsGetRecentsArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 Offset { get; set; }

        [TLProperty(2)]
        public System.UInt32 Limit { get; set; }

    }

    [TLObject(0x55B3E8FB)]
    public partial class GeochatsCheckinArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputGeoChat Peer { get; set; }

    }

    [TLObject(0x6722DD6F)]
    public partial class GeochatsGetFullChatArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputGeoChat Peer { get; set; }

    }

    [TLObject(0x4C8E2273)]
    public partial class GeochatsEditChatTitleArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputGeoChat Peer { get; set; }

        [TLProperty(2)]
        public System.String Title { get; set; }

        [TLProperty(3)]
        public System.String Address { get; set; }

    }

    [TLObject(0x35D81A95)]
    public partial class GeochatsEditChatPhotoArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputGeoChat Peer { get; set; }

        [TLProperty(2)]
        public IInputChatPhoto Photo { get; set; }

    }

    [TLObject(0xCFCDC44D)]
    public partial class GeochatsSearchArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputGeoChat Peer { get; set; }

        [TLProperty(2)]
        public System.String Q { get; set; }

        [TLProperty(3)]
        public IMessagesFilter Filter { get; set; }

        [TLProperty(4)]
        public System.UInt32 MinDate { get; set; }

        [TLProperty(5)]
        public System.UInt32 MaxDate { get; set; }

        [TLProperty(6)]
        public System.UInt32 Offset { get; set; }

        [TLProperty(7)]
        public System.UInt32 MaxId { get; set; }

        [TLProperty(8)]
        public System.UInt32 Limit { get; set; }

    }

    [TLObject(0xB53F7A68)]
    public partial class GeochatsGetHistoryArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputGeoChat Peer { get; set; }

        [TLProperty(2)]
        public System.UInt32 Offset { get; set; }

        [TLProperty(3)]
        public System.UInt32 MaxId { get; set; }

        [TLProperty(4)]
        public System.UInt32 Limit { get; set; }

    }

    [TLObject(0x08B8A729)]
    public partial class GeochatsSetTypingArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputGeoChat Peer { get; set; }

        [TLProperty(2)]
        public System.Boolean Typing { get; set; }

    }

    [TLObject(0x061B0044)]
    public partial class GeochatsSendMessageArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputGeoChat Peer { get; set; }

        [TLProperty(2)]
        public System.String Message { get; set; }

        [TLProperty(3)]
        public System.UInt64 RandomId { get; set; }

    }

    [TLObject(0xB8F0DEFF)]
    public partial class GeochatsSendMediaArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputGeoChat Peer { get; set; }

        [TLProperty(2)]
        public IInputMedia Media { get; set; }

        [TLProperty(3)]
        public System.UInt64 RandomId { get; set; }

    }

    [TLObject(0x0E092E16)]
    public partial class GeochatsCreateGeoChatArgs : ITLObject
    {
        [TLProperty(1)]
        public System.String Title { get; set; }

        [TLProperty(2)]
        public IInputGeoPoint GeoPoint { get; set; }

        [TLProperty(3)]
        public System.String Address { get; set; }

        [TLProperty(4)]
        public System.String Venue { get; set; }

    }

    [TLObject(0x26CF8950)]
    public partial class MessagesGetDhConfigArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 Version { get; set; }

        [TLProperty(2)]
        public System.UInt32 RandomLength { get; set; }

    }

    [TLObject(0xF64DAF43)]
    public partial class MessagesRequestEncryptionArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputUser UserId { get; set; }

        [TLProperty(2)]
        public System.UInt32 RandomId { get; set; }

        [TLProperty(3)]
        public System.Byte[] GA { get; set; }

    }

    [TLObject(0x3DBC0415)]
    public partial class MessagesAcceptEncryptionArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputEncryptedChat Peer { get; set; }

        [TLProperty(2)]
        public System.Byte[] GB { get; set; }

        [TLProperty(3)]
        public System.UInt64 KeyFingerprint { get; set; }

    }

    [TLObject(0xEDD923C5)]
    public partial class MessagesDiscardEncryptionArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 ChatId { get; set; }

    }

    [TLObject(0x791451ED)]
    public partial class MessagesSetEncryptedTypingArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputEncryptedChat Peer { get; set; }

        [TLProperty(2)]
        public System.Boolean Typing { get; set; }

    }

    [TLObject(0x7F4B690A)]
    public partial class MessagesReadEncryptedHistoryArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputEncryptedChat Peer { get; set; }

        [TLProperty(2)]
        public System.UInt32 MaxDate { get; set; }

    }

    [TLObject(0xA9776773)]
    public partial class MessagesSendEncryptedArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputEncryptedChat Peer { get; set; }

        [TLProperty(2)]
        public System.UInt64 RandomId { get; set; }

        [TLProperty(3)]
        public System.Byte[] Data { get; set; }

    }

    [TLObject(0x9A901B66)]
    public partial class MessagesSendEncryptedFileArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputEncryptedChat Peer { get; set; }

        [TLProperty(2)]
        public System.UInt64 RandomId { get; set; }

        [TLProperty(3)]
        public System.Byte[] Data { get; set; }

        [TLProperty(4)]
        public IInputEncryptedFile File { get; set; }

    }

    [TLObject(0x32D439A4)]
    public partial class MessagesSendEncryptedServiceArgs : ITLObject
    {
        [TLProperty(1)]
        public IInputEncryptedChat Peer { get; set; }

        [TLProperty(2)]
        public System.UInt64 RandomId { get; set; }

        [TLProperty(3)]
        public System.Byte[] Data { get; set; }

    }

    [TLObject(0x55A5BB66)]
    public partial class MessagesReceivedQueueArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 MaxQts { get; set; }

    }

    [TLObject(0xDE7B673D)]
    public partial class UploadSaveBigFilePartArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt64 FileId { get; set; }

        [TLProperty(2)]
        public System.UInt32 FilePart { get; set; }

        [TLProperty(3)]
        public System.UInt32 FileTotalParts { get; set; }

        [TLProperty(4)]
        public System.Byte[] Bytes { get; set; }

    }

    [TLObject(0x69796DE9)]
    public partial class InitConnectionArgs : ITLObject
    {
        [TLProperty(1)]
        public System.UInt32 ApiId { get; set; }

        [TLProperty(2)]
        public System.String DeviceModel { get; set; }

        [TLProperty(3)]
        public System.String SystemVersion { get; set; }

        [TLProperty(4)]
        public System.String AppVersion { get; set; }

        [TLProperty(5)]
        public System.String LangCode { get; set; }

        [TLProperty(6)]
        public SharpTL.BaseTypes.ITLObject Query { get; set; }

    }

    [TLObject(0x9CDF08CD)]
    public partial class HelpGetSupportArgs : ITLObject
    {
    }

    [TLObject(0x2B9B08FA)]
    public partial class InvokeWithLayer14Args : ITLObject
    {
        [TLProperty(1)]
        public SharpTL.BaseTypes.ITLObject Query { get; set; }

    }


    // TL types.

    [TLType(typeof(Error))]
    public interface IError : ITLObject
    {
		System.UInt32 Code { get; }
		System.String Text { get; }
    }

    [TLType(typeof(InputPeerEmpty), typeof(InputPeerSelf), typeof(InputPeerContact), typeof(InputPeerForeign), typeof(InputPeerChat))]
    public interface IInputPeer : ITLObject
    {
    }

    [TLType(typeof(InputUserEmpty), typeof(InputUserSelf), typeof(InputUserContact), typeof(InputUserForeign))]
    public interface IInputUser : ITLObject
    {
    }

    [TLType(typeof(InputPhoneContact))]
    public interface IInputContact : ITLObject
    {
		System.UInt64 ClientId { get; }
		System.String Phone { get; }
		System.String FirstName { get; }
		System.String LastName { get; }
    }

    [TLType(typeof(InputFile), typeof(InputFileBig))]
    public interface IInputFile : ITLObject
    {
		System.UInt64 Id { get; }
		System.UInt32 Parts { get; }
		System.String Name { get; }
    }

    [TLType(typeof(InputMediaEmpty), typeof(InputMediaUploadedPhoto), typeof(InputMediaPhoto), typeof(InputMediaGeoPoint), typeof(InputMediaContact), typeof(InputMediaUploadedVideo), typeof(InputMediaUploadedThumbVideo), typeof(InputMediaVideo), typeof(InputMediaUploadedAudio), typeof(InputMediaAudio), typeof(InputMediaUploadedDocument), typeof(InputMediaUploadedThumbDocument), typeof(InputMediaDocument))]
    public interface IInputMedia : ITLObject
    {
    }

    [TLType(typeof(InputChatPhotoEmpty), typeof(InputChatUploadedPhoto), typeof(InputChatPhoto))]
    public interface IInputChatPhoto : ITLObject
    {
    }

    [TLType(typeof(InputGeoPointEmpty), typeof(InputGeoPoint))]
    public interface IInputGeoPoint : ITLObject
    {
    }

    [TLType(typeof(InputPhotoEmpty), typeof(InputPhoto))]
    public interface IInputPhoto : ITLObject
    {
    }

    [TLType(typeof(InputVideoEmpty), typeof(InputVideo))]
    public interface IInputVideo : ITLObject
    {
    }

    [TLType(typeof(InputFileLocation), typeof(InputVideoFileLocation), typeof(InputEncryptedFileLocation), typeof(InputAudioFileLocation), typeof(InputDocumentFileLocation))]
    public interface IInputFileLocation : ITLObject
    {
    }

    [TLType(typeof(InputPhotoCropAuto), typeof(InputPhotoCrop))]
    public interface IInputPhotoCrop : ITLObject
    {
    }

    [TLType(typeof(InputAppEvent))]
    public interface IInputAppEvent : ITLObject
    {
		System.Double Time { get; }
		System.String Type { get; }
		System.UInt64 Peer { get; }
		System.String Data { get; }
    }

    [TLType(typeof(PeerUser), typeof(PeerChat))]
    public interface IPeer : ITLObject
    {
    }

    [TLType(typeof(StorageFileUnknown), typeof(StorageFileJpeg), typeof(StorageFileGif), typeof(StorageFilePng), typeof(StorageFilePdf), typeof(StorageFileMp3), typeof(StorageFileMov), typeof(StorageFilePartial), typeof(StorageFileMp4), typeof(StorageFileWebp))]
    public interface IStorageFileType : ITLObject
    {
    }

    [TLType(typeof(FileLocationUnavailable), typeof(FileLocation))]
    public interface IFileLocation : ITLObject
    {
		System.UInt64 VolumeId { get; }
		System.UInt32 LocalId { get; }
		System.UInt64 Secret { get; }
    }

    [TLType(typeof(UserEmpty), typeof(UserSelf), typeof(UserContact), typeof(UserRequest), typeof(UserForeign), typeof(UserDeleted))]
    public interface IUser : ITLObject
    {
		System.UInt32 Id { get; }
    }

    [TLType(typeof(UserProfilePhotoEmpty), typeof(UserProfilePhoto))]
    public interface IUserProfilePhoto : ITLObject
    {
    }

    [TLType(typeof(UserStatusEmpty), typeof(UserStatusOnline), typeof(UserStatusOffline))]
    public interface IUserStatus : ITLObject
    {
    }

    [TLType(typeof(ChatEmpty), typeof(Chat), typeof(ChatForbidden), typeof(GeoChat))]
    public interface IChat : ITLObject
    {
		System.UInt32 Id { get; }
    }

    [TLType(typeof(ChatFull))]
    public interface IChatFull : ITLObject
    {
		System.UInt32 Id { get; }
		IChatParticipants Participants { get; }
		IPhoto ChatPhoto { get; }
		IPeerNotifySettings NotifySettings { get; }
    }

    [TLType(typeof(ChatParticipant))]
    public interface IChatParticipant : ITLObject
    {
		System.UInt32 UserId { get; }
		System.UInt32 InviterId { get; }
		System.UInt32 Date { get; }
    }

    [TLType(typeof(ChatParticipantsForbidden), typeof(ChatParticipants))]
    public interface IChatParticipants : ITLObject
    {
		System.UInt32 ChatId { get; }
    }

    [TLType(typeof(ChatPhotoEmpty), typeof(ChatPhoto))]
    public interface IChatPhoto : ITLObject
    {
    }

    [TLType(typeof(MessageEmpty), typeof(Message), typeof(MessageForwarded), typeof(MessageService))]
    public interface IMessage : ITLObject
    {
		System.UInt32 Id { get; }
    }

    [TLType(typeof(MessageMediaEmpty), typeof(MessageMediaPhoto), typeof(MessageMediaVideo), typeof(MessageMediaGeo), typeof(MessageMediaContact), typeof(MessageMediaUnsupported), typeof(MessageMediaDocument), typeof(MessageMediaAudio))]
    public interface IMessageMedia : ITLObject
    {
    }

    [TLType(typeof(MessageActionEmpty), typeof(MessageActionChatCreate), typeof(MessageActionChatEditTitle), typeof(MessageActionChatEditPhoto), typeof(MessageActionChatDeletePhoto), typeof(MessageActionChatAddUser), typeof(MessageActionChatDeleteUser), typeof(MessageActionGeoChatCreate), typeof(MessageActionGeoChatCheckin))]
    public interface IMessageAction : ITLObject
    {
    }

    [TLType(typeof(Dialog))]
    public interface IDialog : ITLObject
    {
		IPeer Peer { get; }
		System.UInt32 TopMessage { get; }
		System.UInt32 UnreadCount { get; }
		IPeerNotifySettings NotifySettings { get; }
    }

    [TLType(typeof(PhotoEmpty), typeof(Photo))]
    public interface IPhoto : ITLObject
    {
		System.UInt64 Id { get; }
    }

    [TLType(typeof(PhotoSizeEmpty), typeof(PhotoSize), typeof(PhotoCachedSize))]
    public interface IPhotoSize : ITLObject
    {
		System.String Type { get; }
    }

    [TLType(typeof(VideoEmpty), typeof(Video))]
    public interface IVideo : ITLObject
    {
		System.UInt64 Id { get; }
    }

    [TLType(typeof(GeoPointEmpty), typeof(GeoPoint))]
    public interface IGeoPoint : ITLObject
    {
    }

    [TLType(typeof(AuthCheckedPhone))]
    public interface IAuthCheckedPhone : ITLObject
    {
		System.Boolean PhoneRegistered { get; }
		System.Boolean PhoneInvited { get; }
    }

    [TLType(typeof(AuthSentCode))]
    public interface IAuthSentCode : ITLObject
    {
		System.Boolean PhoneRegistered { get; }
		System.String PhoneCodeHash { get; }
		System.UInt32 SendCallTimeout { get; }
		System.Boolean IsPassword { get; }
    }

    [TLType(typeof(AuthAuthorization))]
    public interface IAuthAuthorization : ITLObject
    {
		System.UInt32 Expires { get; }
		IUser User { get; }
    }

    [TLType(typeof(AuthExportedAuthorization))]
    public interface IAuthExportedAuthorization : ITLObject
    {
		System.UInt32 Id { get; }
		System.Byte[] Bytes { get; }
    }

    [TLType(typeof(InputNotifyPeer), typeof(InputNotifyUsers), typeof(InputNotifyChats), typeof(InputNotifyAll), typeof(InputNotifyGeoChatPeer))]
    public interface IInputNotifyPeer : ITLObject
    {
    }

    [TLType(typeof(InputPeerNotifyEventsEmpty), typeof(InputPeerNotifyEventsAll))]
    public interface IInputPeerNotifyEvents : ITLObject
    {
    }

    [TLType(typeof(InputPeerNotifySettings))]
    public interface IInputPeerNotifySettings : ITLObject
    {
		System.UInt32 MuteUntil { get; }
		System.String Sound { get; }
		System.Boolean ShowPreviews { get; }
		System.UInt32 EventsMask { get; }
    }

    [TLType(typeof(PeerNotifyEventsEmpty), typeof(PeerNotifyEventsAll))]
    public interface IPeerNotifyEvents : ITLObject
    {
    }

    [TLType(typeof(PeerNotifySettingsEmpty), typeof(PeerNotifySettings))]
    public interface IPeerNotifySettings : ITLObject
    {
    }

    [TLType(typeof(WallPaper), typeof(WallPaperSolid))]
    public interface IWallPaper : ITLObject
    {
		System.UInt32 Id { get; }
		System.String Title { get; }
		System.UInt32 Color { get; }
    }

    [TLType(typeof(UserFull))]
    public interface IUserFull : ITLObject
    {
		IUser User { get; }
		IContactsLink Link { get; }
		IPhoto ProfilePhoto { get; }
		IPeerNotifySettings NotifySettings { get; }
		System.Boolean Blocked { get; }
		System.String RealFirstName { get; }
		System.String RealLastName { get; }
    }

    [TLType(typeof(Contact))]
    public interface IContact : ITLObject
    {
		System.UInt32 UserId { get; }
		System.Boolean Mutual { get; }
    }

    [TLType(typeof(ImportedContact))]
    public interface IImportedContact : ITLObject
    {
		System.UInt32 UserId { get; }
		System.UInt64 ClientId { get; }
    }

    [TLType(typeof(ContactBlocked))]
    public interface IContactBlocked : ITLObject
    {
		System.UInt32 UserId { get; }
		System.UInt32 Date { get; }
    }

    [TLType(typeof(ContactFound))]
    public interface IContactFound : ITLObject
    {
		System.UInt32 UserId { get; }
    }

    [TLType(typeof(ContactSuggested))]
    public interface IContactSuggested : ITLObject
    {
		System.UInt32 UserId { get; }
		System.UInt32 MutualContacts { get; }
    }

    [TLType(typeof(ContactStatus))]
    public interface IContactStatus : ITLObject
    {
		System.UInt32 UserId { get; }
		System.UInt32 Expires { get; }
    }

    [TLType(typeof(ChatLocated))]
    public interface IChatLocated : ITLObject
    {
		System.UInt32 ChatId { get; }
		System.UInt32 Distance { get; }
    }

    [TLType(typeof(ContactsForeignLinkUnknown), typeof(ContactsForeignLinkRequested), typeof(ContactsForeignLinkMutual))]
    public interface IContactsForeignLink : ITLObject
    {
    }

    [TLType(typeof(ContactsMyLinkEmpty), typeof(ContactsMyLinkRequested), typeof(ContactsMyLinkContact))]
    public interface IContactsMyLink : ITLObject
    {
    }

    [TLType(typeof(ContactsLink))]
    public interface IContactsLink : ITLObject
    {
		IContactsMyLink MyLink { get; }
		IContactsForeignLink ForeignLink { get; }
		IUser User { get; }
    }

    [TLType(typeof(ContactsContacts), typeof(ContactsContactsNotModified))]
    public interface IContactsContacts : ITLObject
    {
    }

    [TLType(typeof(ContactsImportedContacts))]
    public interface IContactsImportedContacts : ITLObject
    {
		System.Collections.Generic.List<IImportedContact> Imported { get; }
		System.Collections.Generic.List<System.UInt64> RetryContacts { get; }
		System.Collections.Generic.List<IUser> Users { get; }
    }

    [TLType(typeof(ContactsBlocked), typeof(ContactsBlockedSlice))]
    public interface IContactsBlocked : ITLObject
    {
		System.Collections.Generic.List<IContactBlocked> Blocked { get; }
		System.Collections.Generic.List<IUser> Users { get; }
    }

    [TLType(typeof(ContactsFound))]
    public interface IContactsFound : ITLObject
    {
		System.Collections.Generic.List<IContactFound> Results { get; }
		System.Collections.Generic.List<IUser> Users { get; }
    }

    [TLType(typeof(ContactsSuggested))]
    public interface IContactsSuggested : ITLObject
    {
		System.Collections.Generic.List<IContactSuggested> Results { get; }
		System.Collections.Generic.List<IUser> Users { get; }
    }

    [TLType(typeof(MessagesDialogs), typeof(MessagesDialogsSlice))]
    public interface IMessagesDialogs : ITLObject
    {
		System.Collections.Generic.List<IDialog> Dialogs { get; }
		System.Collections.Generic.List<IMessage> Messages { get; }
		System.Collections.Generic.List<IChat> Chats { get; }
		System.Collections.Generic.List<IUser> Users { get; }
    }

    [TLType(typeof(MessagesMessages), typeof(MessagesMessagesSlice))]
    public interface IMessagesMessages : ITLObject
    {
		System.Collections.Generic.List<IMessage> Messages { get; }
		System.Collections.Generic.List<IChat> Chats { get; }
		System.Collections.Generic.List<IUser> Users { get; }
    }

    [TLType(typeof(MessagesMessageEmpty), typeof(MessagesMessage))]
    public interface IMessagesMessage : ITLObject
    {
    }

    [TLType(typeof(MessagesStatedMessages), typeof(MessagesStatedMessagesLinks))]
    public interface IMessagesStatedMessages : ITLObject
    {
		System.Collections.Generic.List<IMessage> Messages { get; }
		System.Collections.Generic.List<IChat> Chats { get; }
		System.Collections.Generic.List<IUser> Users { get; }
		System.UInt32 Pts { get; }
		System.UInt32 Seq { get; }
    }

    [TLType(typeof(MessagesStatedMessage), typeof(MessagesStatedMessageLink))]
    public interface IMessagesStatedMessage : ITLObject
    {
		IMessage Message { get; }
		System.Collections.Generic.List<IChat> Chats { get; }
		System.Collections.Generic.List<IUser> Users { get; }
		System.UInt32 Pts { get; }
		System.UInt32 Seq { get; }
    }

    [TLType(typeof(MessagesSentMessage), typeof(MessagesSentMessageLink))]
    public interface IMessagesSentMessage : ITLObject
    {
		System.UInt32 Id { get; }
		System.UInt32 Date { get; }
		System.UInt32 Pts { get; }
		System.UInt32 Seq { get; }
    }

    [TLType(typeof(MessagesChat))]
    public interface IMessagesChat : ITLObject
    {
		IChat Chat { get; }
		System.Collections.Generic.List<IUser> Users { get; }
    }

    [TLType(typeof(MessagesChats))]
    public interface IMessagesChats : ITLObject
    {
		System.Collections.Generic.List<IChat> Chats { get; }
		System.Collections.Generic.List<IUser> Users { get; }
    }

    [TLType(typeof(MessagesChatFull))]
    public interface IMessagesChatFull : ITLObject
    {
		IChatFull FullChat { get; }
		System.Collections.Generic.List<IChat> Chats { get; }
		System.Collections.Generic.List<IUser> Users { get; }
    }

    [TLType(typeof(MessagesAffectedHistory))]
    public interface IMessagesAffectedHistory : ITLObject
    {
		System.UInt32 Pts { get; }
		System.UInt32 Seq { get; }
		System.UInt32 Offset { get; }
    }

    [TLType(typeof(InputMessagesFilterEmpty), typeof(InputMessagesFilterPhotos), typeof(InputMessagesFilterVideo), typeof(InputMessagesFilterPhotoVideo), typeof(InputMessagesFilterDocument), typeof(InputMessagesFilterAudio))]
    public interface IMessagesFilter : ITLObject
    {
    }

    [TLType(typeof(UpdateNewMessage), typeof(UpdateMessageID), typeof(UpdateReadMessages), typeof(UpdateDeleteMessages), typeof(UpdateRestoreMessages), typeof(UpdateUserTyping), typeof(UpdateChatUserTyping), typeof(UpdateChatParticipants), typeof(UpdateUserStatus), typeof(UpdateUserName), typeof(UpdateUserPhoto), typeof(UpdateContactRegistered), typeof(UpdateContactLink), typeof(UpdateActivation), typeof(UpdateNewAuthorization), typeof(UpdateNewGeoChatMessage), typeof(UpdateNewEncryptedMessage), typeof(UpdateEncryptedChatTyping), typeof(UpdateEncryption), typeof(UpdateEncryptedMessagesRead), typeof(UpdateChatParticipantAdd), typeof(UpdateChatParticipantDelete), typeof(UpdateDcOptions), typeof(UpdateUserBlocked), typeof(UpdateNotifySettings))]
    public interface IUpdate : ITLObject
    {
    }

    [TLType(typeof(UpdatesState))]
    public interface IUpdatesState : ITLObject
    {
		System.UInt32 Pts { get; }
		System.UInt32 Qts { get; }
		System.UInt32 Date { get; }
		System.UInt32 Seq { get; }
		System.UInt32 UnreadCount { get; }
    }

    [TLType(typeof(UpdatesDifferenceEmpty), typeof(UpdatesDifference), typeof(UpdatesDifferenceSlice))]
    public interface IUpdatesDifference : ITLObject
    {
    }

    [TLType(typeof(UpdatesTooLong), typeof(UpdateShortMessage), typeof(UpdateShortChatMessage), typeof(UpdateShort), typeof(UpdatesCombined), typeof(Updates))]
    public interface IUpdates : ITLObject
    {
    }

    [TLType(typeof(PhotosPhotos), typeof(PhotosPhotosSlice))]
    public interface IPhotosPhotos : ITLObject
    {
		System.Collections.Generic.List<IPhoto> Photos { get; }
		System.Collections.Generic.List<IUser> Users { get; }
    }

    [TLType(typeof(PhotosPhoto))]
    public interface IPhotosPhoto : ITLObject
    {
		IPhoto Photo { get; }
		System.Collections.Generic.List<IUser> Users { get; }
    }

    [TLType(typeof(UploadFile))]
    public interface IUploadFile : ITLObject
    {
		IStorageFileType Type { get; }
		System.UInt32 Mtime { get; }
		System.Byte[] Bytes { get; }
    }

    [TLType(typeof(DcOption))]
    public interface IDcOption : ITLObject
    {
		System.UInt32 Id { get; }
		System.String Hostname { get; }
		System.String IpAddress { get; }
		System.UInt32 Port { get; }
    }

    [TLType(typeof(Config))]
    public interface IConfig : ITLObject
    {
		System.UInt32 Date { get; }
		System.Boolean TestMode { get; }
		System.UInt32 ThisDc { get; }
		System.Collections.Generic.List<IDcOption> DcOptions { get; }
		System.UInt32 ChatSizeMax { get; }
		System.UInt32 BroadcastSizeMax { get; }
    }

    [TLType(typeof(NearestDc))]
    public interface INearestDc : ITLObject
    {
		System.String Country { get; }
		System.UInt32 ThisDc { get; }
		System.UInt32 NearestDc_ { get; }
    }

    [TLType(typeof(HelpAppUpdate), typeof(HelpNoAppUpdate))]
    public interface IHelpAppUpdate : ITLObject
    {
    }

    [TLType(typeof(HelpInviteText))]
    public interface IHelpInviteText : ITLObject
    {
		System.String Message { get; }
    }

    [TLType(typeof(InputGeoChat))]
    public interface IInputGeoChat : ITLObject
    {
		System.UInt32 ChatId { get; }
		System.UInt64 AccessHash { get; }
    }

    [TLType(typeof(GeoChatMessageEmpty), typeof(GeoChatMessage), typeof(GeoChatMessageService))]
    public interface IGeoChatMessage : ITLObject
    {
		System.UInt32 ChatId { get; }
		System.UInt32 Id { get; }
    }

    [TLType(typeof(GeochatsStatedMessage))]
    public interface IGeochatsStatedMessage : ITLObject
    {
		IGeoChatMessage Message { get; }
		System.Collections.Generic.List<IChat> Chats { get; }
		System.Collections.Generic.List<IUser> Users { get; }
		System.UInt32 Seq { get; }
    }

    [TLType(typeof(GeochatsLocated))]
    public interface IGeochatsLocated : ITLObject
    {
		System.Collections.Generic.List<IChatLocated> Results { get; }
		System.Collections.Generic.List<IGeoChatMessage> Messages { get; }
		System.Collections.Generic.List<IChat> Chats { get; }
		System.Collections.Generic.List<IUser> Users { get; }
    }

    [TLType(typeof(GeochatsMessages), typeof(GeochatsMessagesSlice))]
    public interface IGeochatsMessages : ITLObject
    {
		System.Collections.Generic.List<IGeoChatMessage> Messages { get; }
		System.Collections.Generic.List<IChat> Chats { get; }
		System.Collections.Generic.List<IUser> Users { get; }
    }

    [TLType(typeof(EncryptedChatEmpty), typeof(EncryptedChatWaiting), typeof(EncryptedChatRequested), typeof(EncryptedChat), typeof(EncryptedChatDiscarded))]
    public interface IEncryptedChat : ITLObject
    {
		System.UInt32 Id { get; }
    }

    [TLType(typeof(InputEncryptedChat))]
    public interface IInputEncryptedChat : ITLObject
    {
		System.UInt32 ChatId { get; }
		System.UInt64 AccessHash { get; }
    }

    [TLType(typeof(EncryptedFileEmpty), typeof(EncryptedFile))]
    public interface IEncryptedFile : ITLObject
    {
    }

    [TLType(typeof(InputEncryptedFileEmpty), typeof(InputEncryptedFileUploaded), typeof(InputEncryptedFile), typeof(InputEncryptedFileBigUploaded))]
    public interface IInputEncryptedFile : ITLObject
    {
    }

    [TLType(typeof(EncryptedMessage), typeof(EncryptedMessageService))]
    public interface IEncryptedMessage : ITLObject
    {
		System.UInt64 RandomId { get; }
		System.UInt32 ChatId { get; }
		System.UInt32 Date { get; }
		System.Byte[] Bytes { get; }
    }

    [TLType(typeof(DecryptedMessageLayer))]
    public interface IDecryptedMessageLayer : ITLObject
    {
		System.UInt32 Layer { get; }
		IDecryptedMessage Message { get; }
    }

    [TLType(typeof(DecryptedMessage), typeof(DecryptedMessageService))]
    public interface IDecryptedMessage : ITLObject
    {
		System.UInt64 RandomId { get; }
		System.Byte[] RandomBytes { get; }
    }

    [TLType(typeof(DecryptedMessageMediaEmpty), typeof(DecryptedMessageMediaPhoto), typeof(DecryptedMessageMediaVideo), typeof(DecryptedMessageMediaGeoPoint), typeof(DecryptedMessageMediaContact), typeof(DecryptedMessageMediaDocument), typeof(DecryptedMessageMediaAudio))]
    public interface IDecryptedMessageMedia : ITLObject
    {
    }

    [TLType(typeof(DecryptedMessageActionSetMessageTTL), typeof(DecryptedMessageActionReadMessages), typeof(DecryptedMessageActionDeleteMessages), typeof(DecryptedMessageActionScreenshotMessages), typeof(DecryptedMessageActionFlushHistory), typeof(DecryptedMessageActionNotifyLayer))]
    public interface IDecryptedMessageAction : ITLObject
    {
    }

    [TLType(typeof(MessagesDhConfigNotModified), typeof(MessagesDhConfig))]
    public interface IMessagesDhConfig : ITLObject
    {
		System.Byte[] Random { get; }
    }

    [TLType(typeof(MessagesSentEncryptedMessage), typeof(MessagesSentEncryptedFile))]
    public interface IMessagesSentEncryptedMessage : ITLObject
    {
		System.UInt32 Date { get; }
    }

    [TLType(typeof(InputAudioEmpty), typeof(InputAudio))]
    public interface IInputAudio : ITLObject
    {
    }

    [TLType(typeof(InputDocumentEmpty), typeof(InputDocument))]
    public interface IInputDocument : ITLObject
    {
    }

    [TLType(typeof(AudioEmpty), typeof(Audio))]
    public interface IAudio : ITLObject
    {
		System.UInt64 Id { get; }
    }

    [TLType(typeof(DocumentEmpty), typeof(Document))]
    public interface IDocument : ITLObject
    {
		System.UInt64 Id { get; }
    }

    [TLType(typeof(HelpSupport))]
    public interface IHelpSupport : ITLObject
    {
		System.String PhoneNumber { get; }
		IUser User { get; }
    }

    [TLType(typeof(NotifyPeer), typeof(NotifyUsers), typeof(NotifyChats), typeof(NotifyAll))]
    public interface INotifyPeer : ITLObject
    {
    }


    /// <summary>
    ///     TL methods.
    /// </summary>
    public interface ITLMethods
    {
        void InvokeAfterMsg(InvokeAfterMsgArgs args);
        void InvokeAfterMsgs(InvokeAfterMsgsArgs args);
        IAuthCheckedPhone AuthCheckPhone(AuthCheckPhoneArgs args);
        IAuthSentCode AuthSendCode(AuthSendCodeArgs args);
        void AuthSendCall(AuthSendCallArgs args);
        IAuthAuthorization AuthSignUp(AuthSignUpArgs args);
        IAuthAuthorization AuthSignIn(AuthSignInArgs args);
        void AuthLogOut(AuthLogOutArgs args);
        void AuthResetAuthorizations(AuthResetAuthorizationsArgs args);
        void AuthSendInvites(AuthSendInvitesArgs args);
        IAuthExportedAuthorization AuthExportAuthorization(AuthExportAuthorizationArgs args);
        IAuthAuthorization AuthImportAuthorization(AuthImportAuthorizationArgs args);
        void AccountRegisterDevice(AccountRegisterDeviceArgs args);
        void AccountUnregisterDevice(AccountUnregisterDeviceArgs args);
        void AccountUpdateNotifySettings(AccountUpdateNotifySettingsArgs args);
        IPeerNotifySettings AccountGetNotifySettings(AccountGetNotifySettingsArgs args);
        void AccountResetNotifySettings(AccountResetNotifySettingsArgs args);
        IUser AccountUpdateProfile(AccountUpdateProfileArgs args);
        void AccountUpdateStatus(AccountUpdateStatusArgs args);
        void AccountGetWallPapers(AccountGetWallPapersArgs args);
        void UsersGetUsers(UsersGetUsersArgs args);
        IUserFull UsersGetFullUser(UsersGetFullUserArgs args);
        void ContactsGetStatuses(ContactsGetStatusesArgs args);
        IContactsContacts ContactsGetContacts(ContactsGetContactsArgs args);
        IContactsImportedContacts ContactsImportContacts(ContactsImportContactsArgs args);
        IContactsFound ContactsSearch(ContactsSearchArgs args);
        IContactsSuggested ContactsGetSuggested(ContactsGetSuggestedArgs args);
        IContactsLink ContactsDeleteContact(ContactsDeleteContactArgs args);
        void ContactsDeleteContacts(ContactsDeleteContactsArgs args);
        void ContactsBlock(ContactsBlockArgs args);
        void ContactsUnblock(ContactsUnblockArgs args);
        IContactsBlocked ContactsGetBlocked(ContactsGetBlockedArgs args);
        IMessagesMessages MessagesGetMessages(MessagesGetMessagesArgs args);
        IMessagesDialogs MessagesGetDialogs(MessagesGetDialogsArgs args);
        IMessagesMessages MessagesGetHistory(MessagesGetHistoryArgs args);
        IMessagesMessages MessagesSearch(MessagesSearchArgs args);
        IMessagesAffectedHistory MessagesReadHistory(MessagesReadHistoryArgs args);
        IMessagesAffectedHistory MessagesDeleteHistory(MessagesDeleteHistoryArgs args);
        void MessagesDeleteMessages(MessagesDeleteMessagesArgs args);
        void MessagesRestoreMessages(MessagesRestoreMessagesArgs args);
        void MessagesReceivedMessages(MessagesReceivedMessagesArgs args);
        void MessagesSetTyping(MessagesSetTypingArgs args);
        IMessagesSentMessage MessagesSendMessage(MessagesSendMessageArgs args);
        IMessagesStatedMessage MessagesSendMedia(MessagesSendMediaArgs args);
        IMessagesStatedMessages MessagesForwardMessages(MessagesForwardMessagesArgs args);
        IMessagesChats MessagesGetChats(MessagesGetChatsArgs args);
        IMessagesChatFull MessagesGetFullChat(MessagesGetFullChatArgs args);
        IMessagesStatedMessage MessagesEditChatTitle(MessagesEditChatTitleArgs args);
        IMessagesStatedMessage MessagesEditChatPhoto(MessagesEditChatPhotoArgs args);
        IMessagesStatedMessage MessagesAddChatUser(MessagesAddChatUserArgs args);
        IMessagesStatedMessage MessagesDeleteChatUser(MessagesDeleteChatUserArgs args);
        IMessagesStatedMessage MessagesCreateChat(MessagesCreateChatArgs args);
        IUpdatesState UpdatesGetState(UpdatesGetStateArgs args);
        IUpdatesDifference UpdatesGetDifference(UpdatesGetDifferenceArgs args);
        IUserProfilePhoto PhotosUpdateProfilePhoto(PhotosUpdateProfilePhotoArgs args);
        IPhotosPhoto PhotosUploadProfilePhoto(PhotosUploadProfilePhotoArgs args);
        void UploadSaveFilePart(UploadSaveFilePartArgs args);
        IUploadFile UploadGetFile(UploadGetFileArgs args);
        IConfig HelpGetConfig(HelpGetConfigArgs args);
        INearestDc HelpGetNearestDc(HelpGetNearestDcArgs args);
        IHelpAppUpdate HelpGetAppUpdate(HelpGetAppUpdateArgs args);
        void HelpSaveAppLog(HelpSaveAppLogArgs args);
        IHelpInviteText HelpGetInviteText(HelpGetInviteTextArgs args);
        IPhotosPhotos PhotosGetUserPhotos(PhotosGetUserPhotosArgs args);
        IMessagesStatedMessage MessagesForwardMessage(MessagesForwardMessageArgs args);
        IMessagesStatedMessages MessagesSendBroadcast(MessagesSendBroadcastArgs args);
        IGeochatsLocated GeochatsGetLocated(GeochatsGetLocatedArgs args);
        IGeochatsMessages GeochatsGetRecents(GeochatsGetRecentsArgs args);
        IGeochatsStatedMessage GeochatsCheckin(GeochatsCheckinArgs args);
        IMessagesChatFull GeochatsGetFullChat(GeochatsGetFullChatArgs args);
        IGeochatsStatedMessage GeochatsEditChatTitle(GeochatsEditChatTitleArgs args);
        IGeochatsStatedMessage GeochatsEditChatPhoto(GeochatsEditChatPhotoArgs args);
        IGeochatsMessages GeochatsSearch(GeochatsSearchArgs args);
        IGeochatsMessages GeochatsGetHistory(GeochatsGetHistoryArgs args);
        void GeochatsSetTyping(GeochatsSetTypingArgs args);
        IGeochatsStatedMessage GeochatsSendMessage(GeochatsSendMessageArgs args);
        IGeochatsStatedMessage GeochatsSendMedia(GeochatsSendMediaArgs args);
        IGeochatsStatedMessage GeochatsCreateGeoChat(GeochatsCreateGeoChatArgs args);
        IMessagesDhConfig MessagesGetDhConfig(MessagesGetDhConfigArgs args);
        IEncryptedChat MessagesRequestEncryption(MessagesRequestEncryptionArgs args);
        IEncryptedChat MessagesAcceptEncryption(MessagesAcceptEncryptionArgs args);
        void MessagesDiscardEncryption(MessagesDiscardEncryptionArgs args);
        void MessagesSetEncryptedTyping(MessagesSetEncryptedTypingArgs args);
        void MessagesReadEncryptedHistory(MessagesReadEncryptedHistoryArgs args);
        IMessagesSentEncryptedMessage MessagesSendEncrypted(MessagesSendEncryptedArgs args);
        IMessagesSentEncryptedMessage MessagesSendEncryptedFile(MessagesSendEncryptedFileArgs args);
        IMessagesSentEncryptedMessage MessagesSendEncryptedService(MessagesSendEncryptedServiceArgs args);
        void MessagesReceivedQueue(MessagesReceivedQueueArgs args);
        void UploadSaveBigFilePart(UploadSaveBigFilePartArgs args);
        void InitConnection(InitConnectionArgs args);
        IHelpSupport HelpGetSupport(HelpGetSupportArgs args);
        void InvokeWithLayer14(InvokeWithLayer14Args args);
    }

    /// <summary>
    ///     TL async methods.
    /// </summary>
    public interface ITLAsyncMethods
    {
        Task InvokeAfterMsgAsync(InvokeAfterMsgArgs args);
        Task InvokeAfterMsgsAsync(InvokeAfterMsgsArgs args);
        Task<IAuthCheckedPhone> AuthCheckPhoneAsync(AuthCheckPhoneArgs args);
        Task<IAuthSentCode> AuthSendCodeAsync(AuthSendCodeArgs args);
        Task AuthSendCallAsync(AuthSendCallArgs args);
        Task<IAuthAuthorization> AuthSignUpAsync(AuthSignUpArgs args);
        Task<IAuthAuthorization> AuthSignInAsync(AuthSignInArgs args);
        Task AuthLogOutAsync(AuthLogOutArgs args);
        Task AuthResetAuthorizationsAsync(AuthResetAuthorizationsArgs args);
        Task AuthSendInvitesAsync(AuthSendInvitesArgs args);
        Task<IAuthExportedAuthorization> AuthExportAuthorizationAsync(AuthExportAuthorizationArgs args);
        Task<IAuthAuthorization> AuthImportAuthorizationAsync(AuthImportAuthorizationArgs args);
        Task AccountRegisterDeviceAsync(AccountRegisterDeviceArgs args);
        Task AccountUnregisterDeviceAsync(AccountUnregisterDeviceArgs args);
        Task AccountUpdateNotifySettingsAsync(AccountUpdateNotifySettingsArgs args);
        Task<IPeerNotifySettings> AccountGetNotifySettingsAsync(AccountGetNotifySettingsArgs args);
        Task AccountResetNotifySettingsAsync(AccountResetNotifySettingsArgs args);
        Task<IUser> AccountUpdateProfileAsync(AccountUpdateProfileArgs args);
        Task AccountUpdateStatusAsync(AccountUpdateStatusArgs args);
        Task AccountGetWallPapersAsync(AccountGetWallPapersArgs args);
        Task UsersGetUsersAsync(UsersGetUsersArgs args);
        Task<IUserFull> UsersGetFullUserAsync(UsersGetFullUserArgs args);
        Task ContactsGetStatusesAsync(ContactsGetStatusesArgs args);
        Task<IContactsContacts> ContactsGetContactsAsync(ContactsGetContactsArgs args);
        Task<IContactsImportedContacts> ContactsImportContactsAsync(ContactsImportContactsArgs args);
        Task<IContactsFound> ContactsSearchAsync(ContactsSearchArgs args);
        Task<IContactsSuggested> ContactsGetSuggestedAsync(ContactsGetSuggestedArgs args);
        Task<IContactsLink> ContactsDeleteContactAsync(ContactsDeleteContactArgs args);
        Task ContactsDeleteContactsAsync(ContactsDeleteContactsArgs args);
        Task ContactsBlockAsync(ContactsBlockArgs args);
        Task ContactsUnblockAsync(ContactsUnblockArgs args);
        Task<IContactsBlocked> ContactsGetBlockedAsync(ContactsGetBlockedArgs args);
        Task<IMessagesMessages> MessagesGetMessagesAsync(MessagesGetMessagesArgs args);
        Task<IMessagesDialogs> MessagesGetDialogsAsync(MessagesGetDialogsArgs args);
        Task<IMessagesMessages> MessagesGetHistoryAsync(MessagesGetHistoryArgs args);
        Task<IMessagesMessages> MessagesSearchAsync(MessagesSearchArgs args);
        Task<IMessagesAffectedHistory> MessagesReadHistoryAsync(MessagesReadHistoryArgs args);
        Task<IMessagesAffectedHistory> MessagesDeleteHistoryAsync(MessagesDeleteHistoryArgs args);
        Task MessagesDeleteMessagesAsync(MessagesDeleteMessagesArgs args);
        Task MessagesRestoreMessagesAsync(MessagesRestoreMessagesArgs args);
        Task MessagesReceivedMessagesAsync(MessagesReceivedMessagesArgs args);
        Task MessagesSetTypingAsync(MessagesSetTypingArgs args);
        Task<IMessagesSentMessage> MessagesSendMessageAsync(MessagesSendMessageArgs args);
        Task<IMessagesStatedMessage> MessagesSendMediaAsync(MessagesSendMediaArgs args);
        Task<IMessagesStatedMessages> MessagesForwardMessagesAsync(MessagesForwardMessagesArgs args);
        Task<IMessagesChats> MessagesGetChatsAsync(MessagesGetChatsArgs args);
        Task<IMessagesChatFull> MessagesGetFullChatAsync(MessagesGetFullChatArgs args);
        Task<IMessagesStatedMessage> MessagesEditChatTitleAsync(MessagesEditChatTitleArgs args);
        Task<IMessagesStatedMessage> MessagesEditChatPhotoAsync(MessagesEditChatPhotoArgs args);
        Task<IMessagesStatedMessage> MessagesAddChatUserAsync(MessagesAddChatUserArgs args);
        Task<IMessagesStatedMessage> MessagesDeleteChatUserAsync(MessagesDeleteChatUserArgs args);
        Task<IMessagesStatedMessage> MessagesCreateChatAsync(MessagesCreateChatArgs args);
        Task<IUpdatesState> UpdatesGetStateAsync(UpdatesGetStateArgs args);
        Task<IUpdatesDifference> UpdatesGetDifferenceAsync(UpdatesGetDifferenceArgs args);
        Task<IUserProfilePhoto> PhotosUpdateProfilePhotoAsync(PhotosUpdateProfilePhotoArgs args);
        Task<IPhotosPhoto> PhotosUploadProfilePhotoAsync(PhotosUploadProfilePhotoArgs args);
        Task UploadSaveFilePartAsync(UploadSaveFilePartArgs args);
        Task<IUploadFile> UploadGetFileAsync(UploadGetFileArgs args);
        Task<IConfig> HelpGetConfigAsync(HelpGetConfigArgs args);
        Task<INearestDc> HelpGetNearestDcAsync(HelpGetNearestDcArgs args);
        Task<IHelpAppUpdate> HelpGetAppUpdateAsync(HelpGetAppUpdateArgs args);
        Task HelpSaveAppLogAsync(HelpSaveAppLogArgs args);
        Task<IHelpInviteText> HelpGetInviteTextAsync(HelpGetInviteTextArgs args);
        Task<IPhotosPhotos> PhotosGetUserPhotosAsync(PhotosGetUserPhotosArgs args);
        Task<IMessagesStatedMessage> MessagesForwardMessageAsync(MessagesForwardMessageArgs args);
        Task<IMessagesStatedMessages> MessagesSendBroadcastAsync(MessagesSendBroadcastArgs args);
        Task<IGeochatsLocated> GeochatsGetLocatedAsync(GeochatsGetLocatedArgs args);
        Task<IGeochatsMessages> GeochatsGetRecentsAsync(GeochatsGetRecentsArgs args);
        Task<IGeochatsStatedMessage> GeochatsCheckinAsync(GeochatsCheckinArgs args);
        Task<IMessagesChatFull> GeochatsGetFullChatAsync(GeochatsGetFullChatArgs args);
        Task<IGeochatsStatedMessage> GeochatsEditChatTitleAsync(GeochatsEditChatTitleArgs args);
        Task<IGeochatsStatedMessage> GeochatsEditChatPhotoAsync(GeochatsEditChatPhotoArgs args);
        Task<IGeochatsMessages> GeochatsSearchAsync(GeochatsSearchArgs args);
        Task<IGeochatsMessages> GeochatsGetHistoryAsync(GeochatsGetHistoryArgs args);
        Task GeochatsSetTypingAsync(GeochatsSetTypingArgs args);
        Task<IGeochatsStatedMessage> GeochatsSendMessageAsync(GeochatsSendMessageArgs args);
        Task<IGeochatsStatedMessage> GeochatsSendMediaAsync(GeochatsSendMediaArgs args);
        Task<IGeochatsStatedMessage> GeochatsCreateGeoChatAsync(GeochatsCreateGeoChatArgs args);
        Task<IMessagesDhConfig> MessagesGetDhConfigAsync(MessagesGetDhConfigArgs args);
        Task<IEncryptedChat> MessagesRequestEncryptionAsync(MessagesRequestEncryptionArgs args);
        Task<IEncryptedChat> MessagesAcceptEncryptionAsync(MessagesAcceptEncryptionArgs args);
        Task MessagesDiscardEncryptionAsync(MessagesDiscardEncryptionArgs args);
        Task MessagesSetEncryptedTypingAsync(MessagesSetEncryptedTypingArgs args);
        Task MessagesReadEncryptedHistoryAsync(MessagesReadEncryptedHistoryArgs args);
        Task<IMessagesSentEncryptedMessage> MessagesSendEncryptedAsync(MessagesSendEncryptedArgs args);
        Task<IMessagesSentEncryptedMessage> MessagesSendEncryptedFileAsync(MessagesSendEncryptedFileArgs args);
        Task<IMessagesSentEncryptedMessage> MessagesSendEncryptedServiceAsync(MessagesSendEncryptedServiceArgs args);
        Task MessagesReceivedQueueAsync(MessagesReceivedQueueArgs args);
        Task UploadSaveBigFilePartAsync(UploadSaveBigFilePartArgs args);
        Task InitConnectionAsync(InitConnectionArgs args);
        Task<IHelpSupport> HelpGetSupportAsync(HelpGetSupportArgs args);
        Task InvokeWithLayer14Async(InvokeWithLayer14Args args);
    }
}
#pragma warning restore 1591
